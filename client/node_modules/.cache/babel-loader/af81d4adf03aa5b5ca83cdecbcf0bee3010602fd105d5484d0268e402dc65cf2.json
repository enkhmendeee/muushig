{"ast":null,"code":"import{useState}from'react';export const useDragAndDrop=()=>{const[draggedCardIndex,setDraggedCardIndex]=useState(null);const[isDraggingToPlay,setIsDraggingToPlay]=useState(false);const handleDragStart=(e,cardIndex)=>{setDraggedCardIndex(cardIndex);setIsDraggingToPlay(false);e.dataTransfer.effectAllowed='move';e.dataTransfer.setData('text/html',cardIndex.toString());};const handleDragOver=e=>{e.preventDefault();e.dataTransfer.dropEffect='move';// Add visual feedback for play drop zone\nconst target=e.currentTarget;if(target.classList.contains('play-drop-zone')){target.classList.add('drag-over');}};const handleDrop=(e,dropIndex,cardOrder,setCardOrder)=>{e.preventDefault();if(draggedCardIndex===null)return;setCardOrder(prevOrder=>{const newOrder=[...prevOrder];const draggedCardOriginalIndex=newOrder[draggedCardIndex];// Remove the dragged card from its current position\nnewOrder.splice(draggedCardIndex,1);// Insert it at the new position\nnewOrder.splice(dropIndex,0,draggedCardOriginalIndex);return newOrder;});setDraggedCardIndex(null);};const handleDropToPlay=(e,cardOrder,playableCards,onPlayCard)=>{e.preventDefault();if(draggedCardIndex===null)return;const originalIndex=cardOrder[draggedCardIndex];if(playableCards.includes(originalIndex)){onPlayCard(originalIndex);}setDraggedCardIndex(null);};const handleDragEnd=()=>{setDraggedCardIndex(null);setIsDraggingToPlay(false);// Remove drag-over visual feedback\nconst dropZone=document.querySelector('.play-drop-zone');if(dropZone){dropZone.classList.remove('drag-over');}};return{draggedCardIndex,isDraggingToPlay,handleDragStart,handleDragOver,handleDrop,handleDropToPlay,handleDragEnd};};","map":{"version":3,"names":["useState","useDragAndDrop","draggedCardIndex","setDraggedCardIndex","isDraggingToPlay","setIsDraggingToPlay","handleDragStart","e","cardIndex","dataTransfer","effectAllowed","setData","toString","handleDragOver","preventDefault","dropEffect","target","currentTarget","classList","contains","add","handleDrop","dropIndex","cardOrder","setCardOrder","prevOrder","newOrder","draggedCardOriginalIndex","splice","handleDropToPlay","playableCards","onPlayCard","originalIndex","includes","handleDragEnd","dropZone","document","querySelector","remove"],"sources":["/Users/enkhmendeee/muushig/client/src/hooks/useDragAndDrop.ts"],"sourcesContent":["import { useState } from 'react';\n\nexport const useDragAndDrop = () => {\n  const [draggedCardIndex, setDraggedCardIndex] = useState<number | null>(null);\n  const [isDraggingToPlay, setIsDraggingToPlay] = useState(false);\n\n  const handleDragStart = (e: React.DragEvent, cardIndex: number) => {\n    setDraggedCardIndex(cardIndex);\n    setIsDraggingToPlay(false);\n    e.dataTransfer.effectAllowed = 'move';\n    e.dataTransfer.setData('text/html', cardIndex.toString());\n  };\n\n  const handleDragOver = (e: React.DragEvent) => {\n    e.preventDefault();\n    e.dataTransfer.dropEffect = 'move';\n    \n    // Add visual feedback for play drop zone\n    const target = e.currentTarget as HTMLElement;\n    if (target.classList.contains('play-drop-zone')) {\n      target.classList.add('drag-over');\n    }\n  };\n\n  const handleDrop = (e: React.DragEvent, dropIndex: number, cardOrder: number[], setCardOrder: React.Dispatch<React.SetStateAction<number[]>>) => {\n    e.preventDefault();\n    if (draggedCardIndex === null) return;\n\n    setCardOrder((prevOrder: number[]) => {\n      const newOrder = [...prevOrder];\n      const draggedCardOriginalIndex = newOrder[draggedCardIndex];\n      \n      // Remove the dragged card from its current position\n      newOrder.splice(draggedCardIndex, 1);\n      \n      // Insert it at the new position\n      newOrder.splice(dropIndex, 0, draggedCardOriginalIndex);\n      \n      return newOrder;\n    });\n    \n    setDraggedCardIndex(null);\n  };\n\n  const handleDropToPlay = (e: React.DragEvent, cardOrder: number[], playableCards: number[], onPlayCard: (cardIndex: number) => void) => {\n    e.preventDefault();\n    if (draggedCardIndex === null) return;\n\n    const originalIndex = cardOrder[draggedCardIndex];\n    if (playableCards.includes(originalIndex)) {\n      onPlayCard(originalIndex);\n    }\n    \n    setDraggedCardIndex(null);\n  };\n\n  const handleDragEnd = () => {\n    setDraggedCardIndex(null);\n    setIsDraggingToPlay(false);\n    \n    // Remove drag-over visual feedback\n    const dropZone = document.querySelector('.play-drop-zone');\n    if (dropZone) {\n      dropZone.classList.remove('drag-over');\n    }\n  };\n\n  return {\n    draggedCardIndex,\n    isDraggingToPlay,\n    handleDragStart,\n    handleDragOver,\n    handleDrop,\n    handleDropToPlay,\n    handleDragEnd\n  };\n};\n"],"mappings":"AAAA,OAASA,QAAQ,KAAQ,OAAO,CAEhC,MAAO,MAAM,CAAAC,cAAc,CAAGA,CAAA,GAAM,CAClC,KAAM,CAACC,gBAAgB,CAAEC,mBAAmB,CAAC,CAAGH,QAAQ,CAAgB,IAAI,CAAC,CAC7E,KAAM,CAACI,gBAAgB,CAAEC,mBAAmB,CAAC,CAAGL,QAAQ,CAAC,KAAK,CAAC,CAE/D,KAAM,CAAAM,eAAe,CAAGA,CAACC,CAAkB,CAAEC,SAAiB,GAAK,CACjEL,mBAAmB,CAACK,SAAS,CAAC,CAC9BH,mBAAmB,CAAC,KAAK,CAAC,CAC1BE,CAAC,CAACE,YAAY,CAACC,aAAa,CAAG,MAAM,CACrCH,CAAC,CAACE,YAAY,CAACE,OAAO,CAAC,WAAW,CAAEH,SAAS,CAACI,QAAQ,CAAC,CAAC,CAAC,CAC3D,CAAC,CAED,KAAM,CAAAC,cAAc,CAAIN,CAAkB,EAAK,CAC7CA,CAAC,CAACO,cAAc,CAAC,CAAC,CAClBP,CAAC,CAACE,YAAY,CAACM,UAAU,CAAG,MAAM,CAElC;AACA,KAAM,CAAAC,MAAM,CAAGT,CAAC,CAACU,aAA4B,CAC7C,GAAID,MAAM,CAACE,SAAS,CAACC,QAAQ,CAAC,gBAAgB,CAAC,CAAE,CAC/CH,MAAM,CAACE,SAAS,CAACE,GAAG,CAAC,WAAW,CAAC,CACnC,CACF,CAAC,CAED,KAAM,CAAAC,UAAU,CAAGA,CAACd,CAAkB,CAAEe,SAAiB,CAAEC,SAAmB,CAAEC,YAA4D,GAAK,CAC/IjB,CAAC,CAACO,cAAc,CAAC,CAAC,CAClB,GAAIZ,gBAAgB,GAAK,IAAI,CAAE,OAE/BsB,YAAY,CAAEC,SAAmB,EAAK,CACpC,KAAM,CAAAC,QAAQ,CAAG,CAAC,GAAGD,SAAS,CAAC,CAC/B,KAAM,CAAAE,wBAAwB,CAAGD,QAAQ,CAACxB,gBAAgB,CAAC,CAE3D;AACAwB,QAAQ,CAACE,MAAM,CAAC1B,gBAAgB,CAAE,CAAC,CAAC,CAEpC;AACAwB,QAAQ,CAACE,MAAM,CAACN,SAAS,CAAE,CAAC,CAAEK,wBAAwB,CAAC,CAEvD,MAAO,CAAAD,QAAQ,CACjB,CAAC,CAAC,CAEFvB,mBAAmB,CAAC,IAAI,CAAC,CAC3B,CAAC,CAED,KAAM,CAAA0B,gBAAgB,CAAGA,CAACtB,CAAkB,CAAEgB,SAAmB,CAAEO,aAAuB,CAAEC,UAAuC,GAAK,CACtIxB,CAAC,CAACO,cAAc,CAAC,CAAC,CAClB,GAAIZ,gBAAgB,GAAK,IAAI,CAAE,OAE/B,KAAM,CAAA8B,aAAa,CAAGT,SAAS,CAACrB,gBAAgB,CAAC,CACjD,GAAI4B,aAAa,CAACG,QAAQ,CAACD,aAAa,CAAC,CAAE,CACzCD,UAAU,CAACC,aAAa,CAAC,CAC3B,CAEA7B,mBAAmB,CAAC,IAAI,CAAC,CAC3B,CAAC,CAED,KAAM,CAAA+B,aAAa,CAAGA,CAAA,GAAM,CAC1B/B,mBAAmB,CAAC,IAAI,CAAC,CACzBE,mBAAmB,CAAC,KAAK,CAAC,CAE1B;AACA,KAAM,CAAA8B,QAAQ,CAAGC,QAAQ,CAACC,aAAa,CAAC,iBAAiB,CAAC,CAC1D,GAAIF,QAAQ,CAAE,CACZA,QAAQ,CAACjB,SAAS,CAACoB,MAAM,CAAC,WAAW,CAAC,CACxC,CACF,CAAC,CAED,MAAO,CACLpC,gBAAgB,CAChBE,gBAAgB,CAChBE,eAAe,CACfO,cAAc,CACdQ,UAAU,CACVQ,gBAAgB,CAChBK,aACF,CAAC,CACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}