{"ast":null,"code":"var _jsxFileName = \"/Users/enkhmendeee/muushig/client/src/pages/GameRoom.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { getSuitSymbol } from '../utils/gameUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GameRoom = ({\n  socket,\n  gameState,\n  currentPlayer,\n  onLeaveGame\n}) => {\n  _s();\n  var _gameState$players$ga, _gameState$players$fi;\n  const [chatMessage, setChatMessage] = useState('');\n  const [playableCards, setPlayableCards] = useState([]);\n  const [showChat, setShowChat] = useState(false);\n  useEffect(() => {\n    if (socket && gameState.gamePhase === 'playing') {\n      socket.emit('get_playable_cards', {\n        gameId: gameState.id\n      });\n    }\n  }, [socket, gameState.gamePhase, gameState.currentPlayerIndex]);\n  useEffect(() => {\n    if (!socket) return;\n    socket.on('playable_cards', data => {\n      if (data.gameId === gameState.id) {\n        setPlayableCards(data.playableCards);\n      }\n    });\n    return () => {\n      socket.off('playable_cards');\n    };\n  }, [socket, gameState.id]);\n  const handleReady = () => {\n    if (!socket) return;\n    socket.emit('ready_check', {\n      gameId: gameState.id,\n      isReady: true\n    });\n  };\n  const handleStartGame = () => {\n    if (!socket) return;\n    socket.emit('start_game', {\n      gameId: gameState.id\n    });\n  };\n  const handleEnterTurn = () => {\n    if (!socket) return;\n    socket.emit('enter_turn', {\n      gameId: gameState.id\n    });\n  };\n  const handleSkipTurn = () => {\n    if (!socket) return;\n    socket.emit('skip_turn', {\n      gameId: gameState.id\n    });\n  };\n  const handlePlayCard = cardIndex => {\n    if (!socket) return;\n    socket.emit('play_card', {\n      gameId: gameState.id,\n      cardIndex\n    });\n  };\n  const handleSendChat = () => {\n    if (!socket || !chatMessage.trim()) return;\n    socket.emit('send_chat', {\n      gameId: gameState.id,\n      message: chatMessage.trim()\n    });\n    setChatMessage('');\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendChat();\n    }\n  };\n  const isMyTurn = ((_gameState$players$ga = gameState.players[gameState.currentPlayerIndex]) === null || _gameState$players$ga === void 0 ? void 0 : _gameState$players$ga.id) === currentPlayer.id;\n  const canStartGame = currentPlayer.isHost && gameState.gamePhase === 'ready';\n  const canMakeDecision = gameState.gamePhase === 'dealing' && currentPlayer.enteredRound === undefined;\n\n  // Calculate player positions around the table\n  const getPlayerPosition = (index, totalPlayers) => {\n    const angle = index * 360 / totalPlayers - 90; // Start from top\n    const radius = 200; // Distance from center\n    const x = Math.cos(angle * Math.PI / 180) * radius;\n    const y = Math.sin(angle * Math.PI / 180) * radius;\n    return {\n      x,\n      y\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-room-new\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-header-new\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"room-info\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"phase-badge-new\",\n          children: gameState.gamePhase.replace('_', ' ')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"room-id-center\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"room-badge-clickable\",\n          onClick: () => {\n            navigator.clipboard.writeText(gameState.id);\n            // Optional: Show a brief notification\n            const button = document.querySelector('.room-badge-clickable');\n            if (button) {\n              const originalText = button.textContent;\n              button.textContent = 'Copied!';\n              button.classList.add('copied');\n              setTimeout(() => {\n                button.textContent = originalText;\n                button.classList.remove('copied');\n              }, 2000);\n            }\n          },\n          title: \"Click to copy game ID\",\n          children: [\"Room: \", gameState.id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onLeaveGame,\n        className: \"leave-btn-new\",\n        children: \"Leave Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-table-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"table-center\",\n          children: [gameState.trumpCard && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"trump-card-new\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card trump-new\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: `card-rank ${gameState.trumpCard.suit === 'hearts' || gameState.trumpCard.suit === 'diamonds' ? 'red' : 'black'}`,\n                children: gameState.trumpCard.rank\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `card-suit ${gameState.trumpCard.suit === 'hearts' || gameState.trumpCard.suit === 'diamonds' ? 'red' : 'black'}`,\n                children: getSuitSymbol(gameState.trumpCard.suit)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"trump-label\",\n              children: \"Trump\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tree-cards\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tree-card-back\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tree-count\",\n              children: gameState.tree.length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this), gameState.currentHouse.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"current-house-new\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"house-cards-new\",\n              children: gameState.currentHouse.map((houseCard, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"house-card-new\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card house-card\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: `card-rank ${houseCard.card.suit === 'hearts' || houseCard.card.suit === 'diamonds' ? 'red' : 'black'}`,\n                    children: houseCard.card.rank\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 152,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: `card-suit ${houseCard.card.suit === 'hearts' || houseCard.card.suit === 'diamonds' ? 'red' : 'black'}`,\n                    children: getSuitSymbol(houseCard.card.suit)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 155,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-player-name\",\n                  children: houseCard.playerName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 159,\n                  columnNumber: 23\n                }, this)]\n              }, `${houseCard.playerId}-${houseCard.card.suit}-${houseCard.card.rank}-${index}`, true, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 15\n          }, this), gameState.gamePhase === 'dealing' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"game-status\",\n            children: [((_gameState$players$fi = gameState.players.find(p => p.enteredRound === undefined)) === null || _gameState$players$fi === void 0 ? void 0 : _gameState$players$fi.name) || 'Someone', \" is deciding to enter...\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), gameState.players.map((player, index) => {\n          const position = getPlayerPosition(index, gameState.players.length);\n          const isCurrentPlayer = player.id === currentPlayer.id;\n          const isActiveTurn = gameState.currentPlayerIndex === index;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `player-position ${isCurrentPlayer ? 'current-player' : ''} ${isActiveTurn ? 'active-turn' : ''}`,\n            style: {\n              transform: `translate(${position.x}px, ${position.y}px)`\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"player-avatar\",\n              children: [player.isHost && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"crown\",\n                children: \"\\uD83D\\uDC51\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 37\n              }, this), player.isDealer && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"dealer-icon\",\n                children: \"\\uD83C\\uDFAF\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 39\n              }, this), player.isMouth && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"mouth-icon\",\n                children: \"\\uD83D\\uDC44\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 38\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"avatar-icon\",\n                children: player.name.charAt(0).toUpperCase()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"player-info-new\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"player-name-new\",\n                children: player.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"player-score-new\",\n                children: [player.score, \"/-\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"player-houses-new\",\n                children: [\"Houses: \", player.housesBuilt]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"player-hand-new\",\n              children: isCurrentPlayer ?\n              /*#__PURE__*/\n              // Show actual cards for current player\n              _jsxDEV(\"div\", {\n                className: \"hand-cards\",\n                children: Array.isArray(player.hand) ? player.hand.map((card, cardIndex) => /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: `card hand-card ${playableCards.includes(cardIndex) ? 'playable' : ''} ${isMyTurn ? 'my-turn' : ''}`,\n                  onClick: () => isMyTurn && playableCards.includes(cardIndex) && handlePlayCard(cardIndex),\n                  disabled: !isMyTurn || !playableCards.includes(cardIndex),\n                  \"aria-label\": `Play ${card.rank} of ${card.suit}`,\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: `card-rank ${card.suit === 'hearts' || card.suit === 'diamonds' ? 'red' : 'black'}`,\n                    children: card.rank\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 218,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: `card-suit ${card.suit === 'hearts' || card.suit === 'diamonds' ? 'red' : 'black'}`,\n                    children: getSuitSymbol(card.suit)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 221,\n                    columnNumber: 27\n                  }, this)]\n                }, `${card.suit}-${card.rank}-${cardIndex}`, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 209,\n                  columnNumber: 25\n                }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-count\",\n                  children: [player.hand, \" cards\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 226,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 21\n              }, this) :\n              /*#__PURE__*/\n              // Show card backs for other players\n              _jsxDEV(\"div\", {\n                className: \"opponent-cards\",\n                children: Array.isArray(player.hand) ? player.hand.map((_, cardIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card card-back\"\n                }, cardIndex, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 233,\n                  columnNumber: 25\n                }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-count\",\n                  children: [player.hand, \" cards\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 235,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"player-status-new\",\n              children: [player.isReady && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"ready-badge-new\",\n                children: \"Ready\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 38\n              }, this), player.enteredRound === true && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"entered-badge-new\",\n                children: \"Entered\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 52\n              }, this), player.enteredRound === false && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"declined-badge-new\",\n                children: \"Declined\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 53\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 17\n            }, this)]\n          }, player.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 15\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-controls-new\",\n      children: [gameState.gamePhase === 'waiting' && !currentPlayer.isReady && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleReady,\n        className: \"ready-btn-new\",\n        children: \"Ready\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 11\n      }, this), canStartGame && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleStartGame,\n        className: \"start-btn-new\",\n        children: \"Start Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 11\n      }, this), canMakeDecision && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"decision-buttons-new\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleEnterTurn,\n          className: \"enter-btn-new\",\n          children: \"Enter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSkipTurn,\n          className: \"skip-btn-new\",\n          children: \"Skip\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShowChat(!showChat),\n      className: \"chat-toggle-btn\",\n      children: \"\\uD83D\\uDCAC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 7\n    }, this), showChat && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowChat(false),\n          className: \"close-chat\",\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-messages-new\",\n        children: gameState.chatMessages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `chat-message-new ${message.type}`,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"message-sender\",\n            children: [message.playerName, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"message-text\",\n            children: message.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 17\n          }, this)]\n        }, message.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input-new\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Type a message...\",\n          value: chatMessage,\n          onChange: e => setChatMessage(e.target.value),\n          onKeyDown: handleKeyPress,\n          className: \"message-input-new\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSendChat,\n          className: \"send-btn-new\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n_s(GameRoom, \"r172T3G94GqSW7yzMFmCyiBUfdc=\");\n_c = GameRoom;\nexport default GameRoom;\nvar _c;\n$RefreshReg$(_c, \"GameRoom\");","map":{"version":3,"names":["React","useState","useEffect","getSuitSymbol","jsxDEV","_jsxDEV","GameRoom","socket","gameState","currentPlayer","onLeaveGame","_s","_gameState$players$ga","_gameState$players$fi","chatMessage","setChatMessage","playableCards","setPlayableCards","showChat","setShowChat","gamePhase","emit","gameId","id","currentPlayerIndex","on","data","off","handleReady","isReady","handleStartGame","handleEnterTurn","handleSkipTurn","handlePlayCard","cardIndex","handleSendChat","trim","message","handleKeyPress","e","key","shiftKey","preventDefault","isMyTurn","players","canStartGame","isHost","canMakeDecision","enteredRound","undefined","getPlayerPosition","index","totalPlayers","angle","radius","x","Math","cos","PI","y","sin","className","children","replace","fileName","_jsxFileName","lineNumber","columnNumber","onClick","navigator","clipboard","writeText","button","document","querySelector","originalText","textContent","classList","add","setTimeout","remove","title","trumpCard","suit","rank","tree","length","currentHouse","map","houseCard","card","playerName","playerId","find","p","name","player","position","isCurrentPlayer","isActiveTurn","style","transform","isDealer","isMouth","charAt","toUpperCase","score","housesBuilt","Array","isArray","hand","includes","disabled","_","chatMessages","type","placeholder","value","onChange","target","onKeyDown","_c","$RefreshReg$"],"sources":["/Users/enkhmendeee/muushig/client/src/pages/GameRoom.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Socket } from 'socket.io-client';\nimport { Player, GameState, ChatMessage } from '../types/game';\nimport { getSuitSymbol } from '../utils/gameUtils';\n\nconst GameRoom: React.FC<{\n  socket: Socket | null;\n  gameState: GameState;\n  currentPlayer: Player;\n  onLeaveGame: () => void;\n}> = ({ socket, gameState, currentPlayer, onLeaveGame }) => {\n  const [chatMessage, setChatMessage] = useState('');\n  const [playableCards, setPlayableCards] = useState<number[]>([]);\n  const [showChat, setShowChat] = useState(false);\n\n  useEffect(() => {\n    if (socket && gameState.gamePhase === 'playing') {\n      socket.emit('get_playable_cards', { gameId: gameState.id });\n    }\n  }, [socket, gameState.gamePhase, gameState.currentPlayerIndex]);\n\n  useEffect(() => {\n    if (!socket) return;\n\n    socket.on('playable_cards', (data: { gameId: string; playableCards: number[] }) => {\n      if (data.gameId === gameState.id) {\n        setPlayableCards(data.playableCards);\n      }\n    });\n\n    return () => {\n      socket.off('playable_cards');\n    };\n  }, [socket, gameState.id]);\n\n  const handleReady = () => {\n    if (!socket) return;\n    socket.emit('ready_check', { gameId: gameState.id, isReady: true });\n  };\n\n  const handleStartGame = () => {\n    if (!socket) return;\n    socket.emit('start_game', { gameId: gameState.id });\n  };\n\n  const handleEnterTurn = () => {\n    if (!socket) return;\n    socket.emit('enter_turn', { gameId: gameState.id });\n  };\n\n  const handleSkipTurn = () => {\n    if (!socket) return;\n    socket.emit('skip_turn', { gameId: gameState.id });\n  };\n\n  const handlePlayCard = (cardIndex: number) => {\n    if (!socket) return;\n    socket.emit('play_card', { gameId: gameState.id, cardIndex });\n  };\n\n  const handleSendChat = () => {\n    if (!socket || !chatMessage.trim()) return;\n    socket.emit('send_chat', { gameId: gameState.id, message: chatMessage.trim() });\n    setChatMessage('');\n  };\n\n  const handleKeyPress = (e: React.KeyboardEvent) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendChat();\n    }\n  };\n\n  const isMyTurn = gameState.players[gameState.currentPlayerIndex]?.id === currentPlayer.id;\n  const canStartGame = currentPlayer.isHost && gameState.gamePhase === 'ready';\n  const canMakeDecision = gameState.gamePhase === 'dealing' && currentPlayer.enteredRound === undefined;\n\n  // Calculate player positions around the table\n  const getPlayerPosition = (index: number, totalPlayers: number) => {\n    const angle = (index * 360) / totalPlayers - 90; // Start from top\n    const radius = 200; // Distance from center\n    const x = Math.cos((angle * Math.PI) / 180) * radius;\n    const y = Math.sin((angle * Math.PI) / 180) * radius;\n    return { x, y };\n  };\n\n  return (\n    <div className=\"game-room-new\">\n      {/* Header */}\n      <div className=\"game-header-new\">\n        <div className=\"room-info\">\n          <span className=\"phase-badge-new\">{gameState.gamePhase.replace('_', ' ')}</span>\n        </div>\n        <div className=\"room-id-center\">\n          <button \n            className=\"room-badge-clickable\"\n            onClick={() => {\n              navigator.clipboard.writeText(gameState.id);\n              // Optional: Show a brief notification\n              const button = document.querySelector('.room-badge-clickable');\n              if (button) {\n                const originalText = button.textContent;\n                button.textContent = 'Copied!';\n                button.classList.add('copied');\n                setTimeout(() => {\n                  button.textContent = originalText;\n                  button.classList.remove('copied');\n                }, 2000);\n              }\n            }}\n            title=\"Click to copy game ID\"\n          >\n            Room: {gameState.id}\n          </button>\n        </div>\n        <button onClick={onLeaveGame} className=\"leave-btn-new\">Leave Game</button>\n      </div>\n\n      {/* Game Table */}\n      <div className=\"game-table-container\">\n        <div className=\"game-table\">\n          {/* Central Table Area */}\n          <div className=\"table-center\">\n            {/* Trump Card */}\n            {gameState.trumpCard && (\n              <div className=\"trump-card-new\">\n                <div className=\"card trump-new\">\n                  <span className={`card-rank ${gameState.trumpCard.suit === 'hearts' || gameState.trumpCard.suit === 'diamonds' ? 'red' : 'black'}`}>\n                    {gameState.trumpCard.rank}\n                  </span>\n                  <span className={`card-suit ${gameState.trumpCard.suit === 'hearts' || gameState.trumpCard.suit === 'diamonds' ? 'red' : 'black'}`}>\n                    {getSuitSymbol(gameState.trumpCard.suit)}\n                  </span>\n                </div>\n                <div className=\"trump-label\">Trump</div>\n              </div>\n            )}\n\n            {/* Tree Cards */}\n            <div className=\"tree-cards\">\n              <div className=\"tree-card-back\"></div>\n              <div className=\"tree-count\">{gameState.tree.length}</div>\n            </div>\n\n            {/* Current House */}\n            {gameState.currentHouse.length > 0 && (\n              <div className=\"current-house-new\">\n                <div className=\"house-cards-new\">\n                  {gameState.currentHouse.map((houseCard, index) => (\n                    <div key={`${houseCard.playerId}-${houseCard.card.suit}-${houseCard.card.rank}-${index}`} className=\"house-card-new\">\n                      <div className=\"card house-card\">\n                        <span className={`card-rank ${houseCard.card.suit === 'hearts' || houseCard.card.suit === 'diamonds' ? 'red' : 'black'}`}>\n                          {houseCard.card.rank}\n                        </span>\n                        <span className={`card-suit ${houseCard.card.suit === 'hearts' || houseCard.card.suit === 'diamonds' ? 'red' : 'black'}`}>\n                          {getSuitSymbol(houseCard.card.suit)}\n                        </span>\n                      </div>\n                      <div className=\"card-player-name\">{houseCard.playerName}</div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            )}\n\n            {/* Game Status Message */}\n            {gameState.gamePhase === 'dealing' && (\n              <div className=\"game-status\">\n                {gameState.players.find(p => p.enteredRound === undefined)?.name || 'Someone'} is deciding to enter...\n              </div>\n            )}\n          </div>\n\n          {/* Players Around the Table */}\n          {gameState.players.map((player, index) => {\n            const position = getPlayerPosition(index, gameState.players.length);\n            const isCurrentPlayer = player.id === currentPlayer.id;\n            const isActiveTurn = gameState.currentPlayerIndex === index;\n            \n            return (\n              <div\n                key={player.id}\n                className={`player-position ${isCurrentPlayer ? 'current-player' : ''} ${isActiveTurn ? 'active-turn' : ''}`}\n                style={{\n                  transform: `translate(${position.x}px, ${position.y}px)`\n                }}\n              >\n                <div className=\"player-avatar\">\n                  {player.isHost && <span className=\"crown\">👑</span>}\n                  {player.isDealer && <span className=\"dealer-icon\">🎯</span>}\n                  {player.isMouth && <span className=\"mouth-icon\">👄</span>}\n                  <div className=\"avatar-icon\">\n                    {player.name.charAt(0).toUpperCase()}\n                  </div>\n                </div>\n                \n                <div className=\"player-info-new\">\n                  <div className=\"player-name-new\">{player.name}</div>\n                  <div className=\"player-score-new\">{player.score}/-</div>\n                  <div className=\"player-houses-new\">Houses: {player.housesBuilt}</div>\n                </div>\n\n                {/* Player Hand */}\n                <div className=\"player-hand-new\">\n                  {isCurrentPlayer ? (\n                    // Show actual cards for current player\n                    <div className=\"hand-cards\">\n                      {Array.isArray(player.hand) ? player.hand.map((card, cardIndex) => (\n                        <button \n                          key={`${card.suit}-${card.rank}-${cardIndex}`}\n                          className={`card hand-card ${playableCards.includes(cardIndex) ? 'playable' : ''} ${\n                            isMyTurn ? 'my-turn' : ''\n                          }`}\n                          onClick={() => isMyTurn && playableCards.includes(cardIndex) && handlePlayCard(cardIndex)}\n                          disabled={!isMyTurn || !playableCards.includes(cardIndex)}\n                          aria-label={`Play ${card.rank} of ${card.suit}`}\n                        >\n                          <span className={`card-rank ${card.suit === 'hearts' || card.suit === 'diamonds' ? 'red' : 'black'}`}>\n                            {card.rank}\n                          </span>\n                          <span className={`card-suit ${card.suit === 'hearts' || card.suit === 'diamonds' ? 'red' : 'black'}`}>\n                            {getSuitSymbol(card.suit)}\n                          </span>\n                        </button>\n                      )) : (\n                        <div className=\"card-count\">{player.hand} cards</div>\n                      )}\n                    </div>\n                  ) : (\n                    // Show card backs for other players\n                    <div className=\"opponent-cards\">\n                      {Array.isArray(player.hand) ? player.hand.map((_, cardIndex) => (\n                        <div key={cardIndex} className=\"card card-back\"></div>\n                      )) : (\n                        <div className=\"card-count\">{player.hand} cards</div>\n                      )}\n                    </div>\n                  )}\n                </div>\n\n                {/* Player Status */}\n                <div className=\"player-status-new\">\n                  {player.isReady && <span className=\"ready-badge-new\">Ready</span>}\n                  {player.enteredRound === true && <span className=\"entered-badge-new\">Entered</span>}\n                  {player.enteredRound === false && <span className=\"declined-badge-new\">Declined</span>}\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n\n      {/* Game Controls */}\n      <div className=\"game-controls-new\">\n        {gameState.gamePhase === 'waiting' && !currentPlayer.isReady && (\n          <button onClick={handleReady} className=\"ready-btn-new\">Ready</button>\n        )}\n        \n        {canStartGame && (\n          <button onClick={handleStartGame} className=\"start-btn-new\">Start Game</button>\n        )}\n        \n        {canMakeDecision && (\n          <div className=\"decision-buttons-new\">\n            <button onClick={handleEnterTurn} className=\"enter-btn-new\">Enter</button>\n            <button onClick={handleSkipTurn} className=\"skip-btn-new\">Skip</button>\n          </div>\n        )}\n      </div>\n\n      {/* Chat Toggle */}\n      <button \n        onClick={() => setShowChat(!showChat)} \n        className=\"chat-toggle-btn\"\n      >\n        💬\n      </button>\n\n      {/* Chat Panel */}\n      {showChat && (\n        <div className=\"chat-panel\">\n          <div className=\"chat-header\">\n            <h3>Chat</h3>\n            <button onClick={() => setShowChat(false)} className=\"close-chat\">×</button>\n          </div>\n          <div className=\"chat-messages-new\">\n            {gameState.chatMessages.map((message: ChatMessage) => (\n              <div key={message.id} className={`chat-message-new ${message.type}`}>\n                <span className=\"message-sender\">{message.playerName}:</span>\n                <span className=\"message-text\">{message.message}</span>\n              </div>\n            ))}\n          </div>\n          <div className=\"chat-input-new\">\n            <input\n              type=\"text\"\n              placeholder=\"Type a message...\"\n              value={chatMessage}\n              onChange={(e) => setChatMessage(e.target.value)}\n              onKeyDown={handleKeyPress}\n              className=\"message-input-new\"\n            />\n            <button onClick={handleSendChat} className=\"send-btn-new\">Send</button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default GameRoom;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}