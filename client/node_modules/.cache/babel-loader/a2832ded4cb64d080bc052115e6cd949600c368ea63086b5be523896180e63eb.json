{"ast":null,"code":"var _jsxFileName = \"/Users/enkhmendeee/muushig/client/src/pages/GameRoom.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { getSuitSymbol } from '../utils/gameUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GameRoom = ({\n  socket,\n  gameState,\n  currentPlayer,\n  onLeaveGame\n}) => {\n  _s();\n  var _gameState$players$ga, _gameState$players$ga2, _gameState$players$ga3, _gameState$players$ga4, _gameState$players$ga5, _gameState$players$ga6, _gameState$players$ga7, _gameState$players$ga8, _gameState$players$ga9, _gameState$players$ga0, _gameState$trumpCard, _gameState$trumpCard2;\n  const [chatMessage, setChatMessage] = useState('');\n  const [playableCards, setPlayableCards] = useState([]);\n  const [showChat, setShowChat] = useState(false);\n  const [selectedCardsForExchange, setSelectedCardsForExchange] = useState([]);\n  const [showExchangeModal, setShowExchangeModal] = useState(false);\n  const [botActionMessage, setBotActionMessage] = useState('');\n  const actualPlayerIndex = gameState.players.findIndex(player => player.id === currentPlayer.id);\n  const prevPlayersRef = React.useRef(gameState.players);\n\n  // Update currentPlayer with latest data from gameState\n  const updatedCurrentPlayer = gameState.players.find(player => player.id === currentPlayer.id) || currentPlayer;\n  useEffect(() => {\n    if (socket && gameState.gamePhase === 'playing') {\n      socket.emit('get_playable_cards', {\n        gameId: gameState.id\n      });\n    }\n  }, [socket, gameState.gamePhase, actualPlayerIndex]);\n  useEffect(() => {\n    if (!socket) return;\n    socket.on('playable_cards', data => {\n      if (data.gameId === gameState.id) {\n        setPlayableCards(data.playableCards);\n      }\n    });\n    return () => {\n      socket.off('playable_cards');\n    };\n  }, [socket, gameState.id]);\n\n  // Track bot decisions and show notifications\n  useEffect(() => {\n    const currentPlayer = gameState.players[gameState.currentPlayerIndex];\n    if (currentPlayer !== null && currentPlayer !== void 0 && currentPlayer.isBot) {\n      // Clear any existing bot action message when a new bot starts thinking\n      setBotActionMessage('');\n    }\n  }, [gameState.currentPlayerIndex, gameState.players]);\n\n  // Track when bots make decisions\n  useEffect(() => {\n    const prevPlayers = prevPlayersRef.current;\n    const currentPlayers = gameState.players;\n    currentPlayers.forEach((player, index) => {\n      const prevPlayer = prevPlayers[index];\n      if (player.isBot && prevPlayer && prevPlayer.enteredRound === undefined && player.enteredRound !== undefined) {\n        const action = player.enteredRound ? 'entered' : 'declined';\n        setBotActionMessage(`${player.name} ${action} the round`);\n\n        // Clear the message after 3 seconds\n        setTimeout(() => {\n          setBotActionMessage('');\n        }, 3000);\n      }\n\n      // Track exchange decisions\n      if (player.isBot && prevPlayer && !prevPlayer.hasExchanged && player.hasExchanged) {\n        setBotActionMessage(`${player.name} exchanged cards`);\n\n        // Clear the message after 3 seconds\n        setTimeout(() => {\n          setBotActionMessage('');\n        }, 3000);\n      }\n    });\n    prevPlayersRef.current = currentPlayers;\n  }, [gameState.players]);\n  const handleReady = () => {\n    if (!socket) return;\n    socket.emit('ready_check', {\n      gameId: gameState.id,\n      isReady: true\n    });\n  };\n  const handleUnready = () => {\n    if (!socket) return;\n    socket.emit('ready_check', {\n      gameId: gameState.id,\n      isReady: false\n    });\n  };\n  const handleStartGame = () => {\n    if (!socket) return;\n    socket.emit('start_game', {\n      gameId: gameState.id\n    });\n  };\n  const handleEnterTurn = () => {\n    if (!socket) return;\n    socket.emit('enter_turn', {\n      gameId: gameState.id\n    });\n  };\n  const handleSkipTurn = () => {\n    if (!socket) return;\n    socket.emit('skip_turn', {\n      gameId: gameState.id\n    });\n  };\n  const handlePlayCard = cardIndex => {\n    if (!socket) return;\n    socket.emit('play_card', {\n      gameId: gameState.id,\n      cardIndex\n    });\n  };\n  const handleCardSelectForExchange = cardIndex => {\n    setSelectedCardsForExchange(prev => {\n      if (prev.includes(cardIndex)) {\n        return prev.filter(index => index !== cardIndex);\n      } else {\n        return [...prev, cardIndex];\n      }\n    });\n  };\n  const handleExchangeCards = () => {\n    if (!socket || selectedCardsForExchange.length === 0) return;\n    socket.emit('exchange_cards', {\n      gameId: gameState.id,\n      cardIndices: selectedCardsForExchange\n    });\n    setSelectedCardsForExchange([]);\n    setShowExchangeModal(false);\n  };\n  const handleSkipExchange = () => {\n    if (!socket) return;\n    socket.emit('exchange_cards', {\n      gameId: gameState.id,\n      cardIndices: []\n    });\n    setShowExchangeModal(false);\n  };\n  const handleExchangeTrump = cardIndex => {\n    if (!socket) return;\n    socket.emit('exchange_trump', {\n      gameId: gameState.id,\n      cardIndex\n    });\n  };\n  const handleSkipTrumpExchange = () => {\n    if (!socket) return;\n    socket.emit('exchange_trump', {\n      gameId: gameState.id,\n      cardIndex: -1\n    });\n  };\n  const handleSendChat = () => {\n    if (!socket || !chatMessage.trim()) return;\n    socket.emit('send_chat', {\n      gameId: gameState.id,\n      message: chatMessage.trim()\n    });\n    setChatMessage('');\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendChat();\n    }\n  };\n  const isMyTurn = ((_gameState$players$ga = gameState.players[gameState.currentPlayerIndex]) === null || _gameState$players$ga === void 0 ? void 0 : _gameState$players$ga.id) === updatedCurrentPlayer.id;\n  const canMakeDecision = gameState.gamePhase === 'dealing' && updatedCurrentPlayer.enteredRound === undefined && isMyTurn;\n  const canExchange = gameState.gamePhase === 'exchanging' && updatedCurrentPlayer.enteredRound === true && !updatedCurrentPlayer.hasExchanged && isMyTurn;\n  const canExchangeTrump = gameState.gamePhase === 'trump_exchanging' && updatedCurrentPlayer.enteredRound === true && updatedCurrentPlayer.isDealer && !updatedCurrentPlayer.hasExchanged;\n\n  // Calculate player positions around the table\n  const getPlayerPosition = (index, totalPlayers, actualPlayerIndex) => {\n    // Calculate relative position (how many positions away from current player)\n    let relativeIndex = index - actualPlayerIndex;\n    if (relativeIndex < 0) {\n      relativeIndex += totalPlayers;\n    }\n\n    // Position current player at bottom (270 degrees), others relative to that\n    const angle = relativeIndex * 360 / totalPlayers + 90; // Start from bottom\n\n    // Adjust radius based on number of players to prevent overlapping\n    const baseRadius = 250;\n    const radius = totalPlayers <= 3 ? baseRadius : baseRadius + (totalPlayers - 3) * 30;\n    const x = Math.cos(angle * Math.PI / 180) * radius;\n    const y = Math.sin(angle * Math.PI / 180) * radius;\n    return {\n      x,\n      y\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-room-new\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-header-new\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"room-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"phase-badge-new\",\n          children: gameState.gamePhase.replace('_', ' ')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"bot-info\",\n          children: [\"\\uD83E\\uDD16 \", gameState.players.filter(p => p.isBot).length, \" Bots\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"room-id-center\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"room-badge-clickable\",\n          onClick: () => {\n            navigator.clipboard.writeText(gameState.id);\n            // Optional: Show a brief notification\n            const button = document.querySelector('.room-badge-clickable');\n            if (button) {\n              const originalText = button.textContent;\n              button.textContent = 'Copied!';\n              button.classList.add('copied');\n              setTimeout(() => {\n                button.textContent = originalText;\n                button.classList.remove('copied');\n              }, 2000);\n            }\n          },\n          title: \"Click to copy game ID\",\n          children: [\"Room: \", gameState.id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onLeaveGame,\n        className: \"leave-btn-new\",\n        children: \"Leave Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-table-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"table-center\",\n          children: [gameState.trumpCard && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"trump-card-new\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card trump-new\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: `card-rank ${gameState.trumpCard.suit === 'hearts' || gameState.trumpCard.suit === 'diamonds' ? 'red' : 'black'}`,\n                children: gameState.trumpCard.rank\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `card-suit ${gameState.trumpCard.suit === 'hearts' || gameState.trumpCard.suit === 'diamonds' ? 'red' : 'black'}`,\n                children: getSuitSymbol(gameState.trumpCard.suit)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"trump-label\",\n              children: \"Trump\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tree-cards\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tree-card-back\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tree-count\",\n              children: gameState.tree.length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 13\n          }, this), gameState.currentHouse.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"current-house-new\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"house-cards-new\",\n              children: gameState.currentHouse.map((houseCard, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"house-card-new\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card house-card\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: `card-rank ${houseCard.card.suit === 'hearts' || houseCard.card.suit === 'diamonds' ? 'red' : 'black'}`,\n                    children: houseCard.card.rank\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 261,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: `card-suit ${houseCard.card.suit === 'hearts' || houseCard.card.suit === 'diamonds' ? 'red' : 'black'}`,\n                    children: getSuitSymbol(houseCard.card.suit)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 264,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 260,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-player-name\",\n                  children: houseCard.playerName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 268,\n                  columnNumber: 23\n                }, this)]\n              }, `${houseCard.playerId}-${houseCard.card.suit}-${houseCard.card.rank}-${index}`, true, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 15\n          }, this), gameState.gamePhase === 'dealing' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"game-status\",\n            children: [(_gameState$players$ga2 = gameState.players[gameState.currentPlayerIndex]) !== null && _gameState$players$ga2 !== void 0 && _gameState$players$ga2.isBot ? '🤖 ' : '', (_gameState$players$ga3 = gameState.players[gameState.currentPlayerIndex]) === null || _gameState$players$ga3 === void 0 ? void 0 : _gameState$players$ga3.name, \" is deciding to enter...\", ((_gameState$players$ga4 = gameState.players[gameState.currentPlayerIndex]) === null || _gameState$players$ga4 === void 0 ? void 0 : _gameState$players$ga4.isBot) && ' (thinking...)']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 15\n          }, this), gameState.gamePhase === 'exchanging' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"game-status\",\n            children: [(_gameState$players$ga5 = gameState.players[gameState.currentPlayerIndex]) !== null && _gameState$players$ga5 !== void 0 && _gameState$players$ga5.isBot ? '🤖 ' : '', (_gameState$players$ga6 = gameState.players[gameState.currentPlayerIndex]) === null || _gameState$players$ga6 === void 0 ? void 0 : _gameState$players$ga6.name, \" is exchanging cards...\", ((_gameState$players$ga7 = gameState.players[gameState.currentPlayerIndex]) === null || _gameState$players$ga7 === void 0 ? void 0 : _gameState$players$ga7.isBot) && ' (thinking...)']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 15\n          }, this), gameState.gamePhase === 'trump_exchanging' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"game-status\",\n            children: [(_gameState$players$ga8 = gameState.players[gameState.currentPlayerIndex]) !== null && _gameState$players$ga8 !== void 0 && _gameState$players$ga8.isBot ? '🤖 ' : '', (_gameState$players$ga9 = gameState.players[gameState.currentPlayerIndex]) === null || _gameState$players$ga9 === void 0 ? void 0 : _gameState$players$ga9.name, \" is exchanging trump card...\", ((_gameState$players$ga0 = gameState.players[gameState.currentPlayerIndex]) === null || _gameState$players$ga0 === void 0 ? void 0 : _gameState$players$ga0.isBot) && ' (thinking...)']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 15\n          }, this), botActionMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bot-action-notification\",\n            children: botActionMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this), gameState.players.map((player, index) => {\n          const position = getPlayerPosition(index, gameState.players.length, actualPlayerIndex);\n          const isCurrentPlayer = player.id === updatedCurrentPlayer.id;\n          const isActiveTurn = gameState.currentPlayerIndex === index;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `player-position ${isCurrentPlayer ? 'current-player' : ''} ${isActiveTurn ? 'active-turn' : ''}`,\n            style: {\n              '--x': `${position.x}px`,\n              '--y': `${position.y}px`\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"player-avatar\",\n              children: [player.isHost && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"crown\",\n                children: \"\\uD83D\\uDC51\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 322,\n                columnNumber: 37\n              }, this), player.isDealer && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"dealer-icon\",\n                children: \"\\uD83C\\uDFAF\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 323,\n                columnNumber: 39\n              }, this), player.isMouth && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"mouth-icon\",\n                children: \"\\uD83D\\uDC44\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 38\n              }, this), player.isBot && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"bot-icon\",\n                children: \"\\uD83E\\uDD16\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 36\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"avatar-icon\",\n                children: player.name.charAt(0).toUpperCase()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 326,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"player-info-new\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"player-name-new\",\n                children: player.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 332,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"player-score-new\",\n                children: [player.score, \"/-\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 333,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"player-houses-new\",\n                children: [\"Houses: \", player.housesBuilt]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 334,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"player-hand-new\",\n              children: isCurrentPlayer ?\n              /*#__PURE__*/\n              // Show actual cards for current player\n              _jsxDEV(\"div\", {\n                className: \"hand-cards\",\n                children: Array.isArray(player.hand) ? player.hand.map((card, cardIndex) => /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: `card hand-card ${playableCards.includes(cardIndex) ? 'playable' : ''} ${isMyTurn ? 'my-turn' : ''} ${selectedCardsForExchange.includes(cardIndex) ? 'selected-for-exchange' : ''}`,\n                  onClick: () => {\n                    if (canExchange) {\n                      handleCardSelectForExchange(cardIndex);\n                    } else if (isMyTurn && playableCards.includes(cardIndex)) {\n                      handlePlayCard(cardIndex);\n                    }\n                  },\n                  disabled: !isMyTurn || !canExchange && !playableCards.includes(cardIndex),\n                  \"aria-label\": `Play ${card.rank} of ${card.suit}`,\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: `card-rank ${card.suit === 'hearts' || card.suit === 'diamonds' ? 'red' : 'black'}`,\n                    children: card.rank\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 358,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: `card-suit ${card.suit === 'hearts' || card.suit === 'diamonds' ? 'red' : 'black'}`,\n                    children: getSuitSymbol(card.suit)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 361,\n                    columnNumber: 27\n                  }, this)]\n                }, `${card.suit}-${card.rank}-${cardIndex}`, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 343,\n                  columnNumber: 25\n                }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-count\",\n                  children: [player.hand, \" cards\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 366,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 341,\n                columnNumber: 21\n              }, this) :\n              /*#__PURE__*/\n              // Show card backs for other players\n              _jsxDEV(\"div\", {\n                className: \"opponent-cards\",\n                children: Array.isArray(player.hand) ? player.hand.map((_, cardIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card card-back\"\n                }, `${player.id}-card-back-${cardIndex}`, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 373,\n                  columnNumber: 25\n                }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-count\",\n                  children: [player.hand, \" cards\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 375,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 371,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"player-status-new\",\n              children: [player.isReady && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"ready-badge-new\",\n                children: \"Ready\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 383,\n                columnNumber: 38\n              }, this), player.enteredRound === true && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"entered-badge-new\",\n                children: \"Entered\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 384,\n                columnNumber: 52\n              }, this), player.enteredRound === false && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"declined-badge-new\",\n                children: \"Declined\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 385,\n                columnNumber: 53\n              }, this), player.hasExchanged && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"exchanged-badge-new\",\n                children: \"Exchanged\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 386,\n                columnNumber: 43\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 382,\n              columnNumber: 17\n            }, this)]\n          }, player.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 15\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-controls-new\",\n      children: [gameState.gamePhase === 'waiting' && !updatedCurrentPlayer.isReady && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleReady,\n        className: \"ready-btn-new\",\n        children: \"Ready\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 11\n      }, this), (gameState.gamePhase === 'waiting' || gameState.gamePhase === 'playing') && updatedCurrentPlayer.isReady && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUnready,\n        className: \"unready-btn-new\",\n        children: \"Unready\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 11\n      }, this), updatedCurrentPlayer.isHost && gameState.gamePhase === 'ready' && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleStartGame,\n        className: \"start-btn-new\",\n        children: \"Start Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 11\n      }, this), canMakeDecision && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"decision-buttons-new\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleEnterTurn,\n          className: \"enter-btn-new\",\n          children: \"Enter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSkipTurn,\n          className: \"skip-btn-new\",\n          children: \"Skip\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 11\n      }, this), canExchange && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"exchange-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleExchangeCards,\n          disabled: selectedCardsForExchange.length === 0,\n          className: \"exchange-btn\",\n          children: [\"Exchange \", selectedCardsForExchange.length, \" Cards\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSkipExchange,\n          className: \"skip-exchange-btn\",\n          children: \"Skip Exchange\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 11\n      }, this), canExchangeTrump && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"trump-exchange-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"trump-exchange-info\",\n          children: [\"Select a card to exchange with the trump card (\", (_gameState$trumpCard = gameState.trumpCard) === null || _gameState$trumpCard === void 0 ? void 0 : _gameState$trumpCard.rank, \" of \", (_gameState$trumpCard2 = gameState.trumpCard) === null || _gameState$trumpCard2 === void 0 ? void 0 : _gameState$trumpCard2.suit, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"trump-exchange-cards\",\n          children: Array.isArray(updatedCurrentPlayer.hand) && updatedCurrentPlayer.hand.map((card, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"card trump-exchange-card\",\n            onClick: () => handleExchangeTrump(index),\n            \"aria-label\": `Exchange ${card.rank} of ${card.suit} with trump card`,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: `card-rank ${card.suit === 'hearts' || card.suit === 'diamonds' ? 'red' : 'black'}`,\n              children: card.rank\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 444,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `card-suit ${card.suit === 'hearts' || card.suit === 'diamonds' ? 'red' : 'black'}`,\n              children: getSuitSymbol(card.suit)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 447,\n              columnNumber: 19\n            }, this)]\n          }, `trump-exchange-${card.suit}-${card.rank}-${index}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 438,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSkipTrumpExchange,\n          className: \"skip-trump-exchange-btn\",\n          children: \"Skip Trump Exchange\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 7\n    }, this), showExchangeModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"exchange-modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"exchange-modal\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Exchange Cards\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Select cards to exchange with the tree. You can exchange up to \", gameState.tree.length, \" cards.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"exchange-cards-preview\",\n          children: Array.isArray(updatedCurrentPlayer.hand) && updatedCurrentPlayer.hand.map((card, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `card exchange-card ${selectedCardsForExchange.includes(index) ? 'selected' : ''}`,\n            onClick: () => handleCardSelectForExchange(index),\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: `card-rank ${card.suit === 'hearts' || card.suit === 'diamonds' ? 'red' : 'black'}`,\n              children: card.rank\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 473,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `card-suit ${card.suit === 'hearts' || card.suit === 'diamonds' ? 'red' : 'black'}`,\n              children: getSuitSymbol(card.suit)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 476,\n              columnNumber: 19\n            }, this)]\n          }, `${card.suit}-${card.rank}-${index}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 468,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"exchange-modal-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleExchangeCards,\n            disabled: selectedCardsForExchange.length === 0,\n            className: \"confirm-exchange-btn\",\n            children: [\"Exchange \", selectedCardsForExchange.length, \" Cards\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 483,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSkipExchange,\n            className: \"skip-exchange-btn\",\n            children: \"Skip Exchange\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 490,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShowChat(!showChat),\n      className: \"chat-toggle-btn\",\n      children: \"\\uD83D\\uDCAC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 499,\n      columnNumber: 7\n    }, this), showChat && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 510,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowChat(false),\n          className: \"close-chat\",\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 511,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 509,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-messages-new\",\n        children: gameState.chatMessages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `chat-message-new ${message.type}`,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"message-sender\",\n            children: [message.playerName, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 516,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"message-text\",\n            children: message.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 517,\n            columnNumber: 17\n          }, this)]\n        }, message.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 515,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 513,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input-new\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Type a message...\",\n          value: chatMessage,\n          onChange: e => setChatMessage(e.target.value),\n          onKeyDown: handleKeyPress,\n          className: \"message-input-new\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 522,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSendChat,\n          className: \"send-btn-new\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 530,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 521,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 508,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 196,\n    columnNumber: 5\n  }, this);\n};\n_s(GameRoom, \"8VTMRVTTw9OKRUryRQKvrsEnjFw=\");\n_c = GameRoom;\nexport default GameRoom;\nvar _c;\n$RefreshReg$(_c, \"GameRoom\");","map":{"version":3,"names":["React","useState","useEffect","getSuitSymbol","jsxDEV","_jsxDEV","GameRoom","socket","gameState","currentPlayer","onLeaveGame","_s","_gameState$players$ga","_gameState$players$ga2","_gameState$players$ga3","_gameState$players$ga4","_gameState$players$ga5","_gameState$players$ga6","_gameState$players$ga7","_gameState$players$ga8","_gameState$players$ga9","_gameState$players$ga0","_gameState$trumpCard","_gameState$trumpCard2","chatMessage","setChatMessage","playableCards","setPlayableCards","showChat","setShowChat","selectedCardsForExchange","setSelectedCardsForExchange","showExchangeModal","setShowExchangeModal","botActionMessage","setBotActionMessage","actualPlayerIndex","players","findIndex","player","id","prevPlayersRef","useRef","updatedCurrentPlayer","find","gamePhase","emit","gameId","on","data","off","currentPlayerIndex","isBot","prevPlayers","current","currentPlayers","forEach","index","prevPlayer","enteredRound","undefined","action","name","setTimeout","hasExchanged","handleReady","isReady","handleUnready","handleStartGame","handleEnterTurn","handleSkipTurn","handlePlayCard","cardIndex","handleCardSelectForExchange","prev","includes","filter","handleExchangeCards","length","cardIndices","handleSkipExchange","handleExchangeTrump","handleSkipTrumpExchange","handleSendChat","trim","message","handleKeyPress","e","key","shiftKey","preventDefault","isMyTurn","canMakeDecision","canExchange","canExchangeTrump","isDealer","getPlayerPosition","totalPlayers","relativeIndex","angle","baseRadius","radius","x","Math","cos","PI","y","sin","className","children","replace","fileName","_jsxFileName","lineNumber","columnNumber","p","onClick","navigator","clipboard","writeText","button","document","querySelector","originalText","textContent","classList","add","remove","title","trumpCard","suit","rank","tree","currentHouse","map","houseCard","card","playerName","playerId","position","isCurrentPlayer","isActiveTurn","style","isHost","isMouth","charAt","toUpperCase","score","housesBuilt","Array","isArray","hand","disabled","_","chatMessages","type","placeholder","value","onChange","target","onKeyDown","_c","$RefreshReg$"],"sources":["/Users/enkhmendeee/muushig/client/src/pages/GameRoom.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Socket } from 'socket.io-client';\nimport { Player, GameState, ChatMessage } from '../types/game';\nimport { getSuitSymbol } from '../utils/gameUtils';\n\nconst GameRoom: React.FC<{\n  socket: Socket | null;\n  gameState: GameState;\n  currentPlayer: Player;\n  onLeaveGame: () => void;\n}> = ({ socket, gameState, currentPlayer, onLeaveGame }) => {\n  const [chatMessage, setChatMessage] = useState('');\n  const [playableCards, setPlayableCards] = useState<number[]>([]);\n  const [showChat, setShowChat] = useState(false);\n  const [selectedCardsForExchange, setSelectedCardsForExchange] = useState<number[]>([]);\n  const [showExchangeModal, setShowExchangeModal] = useState(false);\n  const [botActionMessage, setBotActionMessage] = useState<string>('');\n  const actualPlayerIndex = gameState.players.findIndex(player => player.id === currentPlayer.id);\n  const prevPlayersRef = React.useRef(gameState.players);\n  \n  // Update currentPlayer with latest data from gameState\n  const updatedCurrentPlayer = gameState.players.find(player => player.id === currentPlayer.id) || currentPlayer;\n\n  useEffect(() => {\n    if (socket && gameState.gamePhase === 'playing') {\n      socket.emit('get_playable_cards', { gameId: gameState.id });\n    }\n  }, [socket, gameState.gamePhase, actualPlayerIndex]);\n\n  useEffect(() => {\n    if (!socket) return;\n\n    socket.on('playable_cards', (data: { gameId: string; playableCards: number[] }) => {\n      if (data.gameId === gameState.id) {\n        setPlayableCards(data.playableCards);\n      }\n    });\n\n    return () => {\n      socket.off('playable_cards');\n    };\n  }, [socket, gameState.id]);\n\n  // Track bot decisions and show notifications\n  useEffect(() => {\n    const currentPlayer = gameState.players[gameState.currentPlayerIndex];\n    if (currentPlayer?.isBot) {\n      // Clear any existing bot action message when a new bot starts thinking\n      setBotActionMessage('');\n    }\n  }, [gameState.currentPlayerIndex, gameState.players]);\n\n  // Track when bots make decisions\n  useEffect(() => {\n    const prevPlayers = prevPlayersRef.current;\n    const currentPlayers = gameState.players;\n    \n    currentPlayers.forEach((player, index) => {\n      const prevPlayer = prevPlayers[index];\n      if (player.isBot && \n          prevPlayer && \n          prevPlayer.enteredRound === undefined && \n          player.enteredRound !== undefined) {\n        const action = player.enteredRound ? 'entered' : 'declined';\n        setBotActionMessage(`${player.name} ${action} the round`);\n        \n        // Clear the message after 3 seconds\n        setTimeout(() => {\n          setBotActionMessage('');\n        }, 3000);\n      }\n      \n      // Track exchange decisions\n      if (player.isBot && \n          prevPlayer && \n          !prevPlayer.hasExchanged && \n          player.hasExchanged) {\n        setBotActionMessage(`${player.name} exchanged cards`);\n        \n        // Clear the message after 3 seconds\n        setTimeout(() => {\n          setBotActionMessage('');\n        }, 3000);\n      }\n    });\n    \n    prevPlayersRef.current = currentPlayers;\n  }, [gameState.players]);\n\n  const handleReady = () => {\n    if (!socket) return;\n    socket.emit('ready_check', { gameId: gameState.id, isReady: true });\n  };\n\n  const handleUnready = () => {\n    if (!socket) return;\n    socket.emit('ready_check', { gameId: gameState.id, isReady: false });\n  };\n\n  const handleStartGame = () => {\n    if (!socket) return;\n    socket.emit('start_game', { gameId: gameState.id });\n  };\n\n  const handleEnterTurn = () => {\n    if (!socket) return;\n    socket.emit('enter_turn', { gameId: gameState.id });\n  };\n\n  const handleSkipTurn = () => {\n    if (!socket) return;\n    socket.emit('skip_turn', { gameId: gameState.id });\n  };\n\n  const handlePlayCard = (cardIndex: number) => {\n    if (!socket) return;\n    socket.emit('play_card', { gameId: gameState.id, cardIndex });\n  };\n\n  const handleCardSelectForExchange = (cardIndex: number) => {\n    setSelectedCardsForExchange(prev => {\n      if (prev.includes(cardIndex)) {\n        return prev.filter(index => index !== cardIndex);\n      } else {\n        return [...prev, cardIndex];\n      }\n    });\n  };\n\n  const handleExchangeCards = () => {\n    if (!socket || selectedCardsForExchange.length === 0) return;\n    socket.emit('exchange_cards', { \n      gameId: gameState.id, \n      cardIndices: selectedCardsForExchange \n    });\n    setSelectedCardsForExchange([]);\n    setShowExchangeModal(false);\n  };\n\n  const handleSkipExchange = () => {\n    if (!socket) return;\n    socket.emit('exchange_cards', { gameId: gameState.id, cardIndices: [] });\n    setShowExchangeModal(false);\n  };\n\n  const handleExchangeTrump = (cardIndex: number) => {\n    if (!socket) return;\n    socket.emit('exchange_trump', { gameId: gameState.id, cardIndex });\n  };\n\n  const handleSkipTrumpExchange = () => {\n    if (!socket) return;\n    socket.emit('exchange_trump', { gameId: gameState.id, cardIndex: -1 });\n  };\n\n  const handleSendChat = () => {\n    if (!socket || !chatMessage.trim()) return;\n    socket.emit('send_chat', { gameId: gameState.id, message: chatMessage.trim() });\n    setChatMessage('');\n  };\n\n  const handleKeyPress = (e: React.KeyboardEvent) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendChat();\n    }\n  };\n\n  const isMyTurn = gameState.players[gameState.currentPlayerIndex]?.id === updatedCurrentPlayer.id;\n  const canMakeDecision = gameState.gamePhase === 'dealing' && updatedCurrentPlayer.enteredRound === undefined && isMyTurn;\n  const canExchange = gameState.gamePhase === 'exchanging' && updatedCurrentPlayer.enteredRound === true && !updatedCurrentPlayer.hasExchanged && isMyTurn;\n  const canExchangeTrump = gameState.gamePhase === 'trump_exchanging' && updatedCurrentPlayer.enteredRound === true && updatedCurrentPlayer.isDealer && !updatedCurrentPlayer.hasExchanged;\n\n  // Calculate player positions around the table\n  const getPlayerPosition = (index: number, totalPlayers: number, actualPlayerIndex: number) => {\n    // Calculate relative position (how many positions away from current player)\n    let relativeIndex = index - actualPlayerIndex;\n    if (relativeIndex < 0) {\n      relativeIndex += totalPlayers;\n    }\n    \n    // Position current player at bottom (270 degrees), others relative to that\n    const angle = (relativeIndex * 360) / totalPlayers + 90; // Start from bottom\n    \n    // Adjust radius based on number of players to prevent overlapping\n    const baseRadius = 250;\n    const radius = totalPlayers <= 3 ? baseRadius : baseRadius + (totalPlayers - 3) * 30;\n    \n    const x = Math.cos((angle * Math.PI) / 180) * radius;\n    const y = Math.sin((angle * Math.PI) / 180) * radius;\n    \n    return { x, y };\n  };\n\n  return (\n    <div className=\"game-room-new\">\n      {/* Header */}\n      <div className=\"game-header-new\">\n        <div className=\"room-info\">\n          <span className=\"phase-badge-new\">{gameState.gamePhase.replace('_', ' ')}</span>\n          <span className=\"bot-info\">🤖 {gameState.players.filter(p => p.isBot).length} Bots</span>\n        </div>\n        <div className=\"room-id-center\">\n          <button \n            className=\"room-badge-clickable\"\n            onClick={() => {\n              navigator.clipboard.writeText(gameState.id);\n              // Optional: Show a brief notification\n              const button = document.querySelector('.room-badge-clickable');\n              if (button) {\n                const originalText = button.textContent;\n                button.textContent = 'Copied!';\n                button.classList.add('copied');\n                setTimeout(() => {\n                  button.textContent = originalText;\n                  button.classList.remove('copied');\n                }, 2000);\n              }\n            }}\n            title=\"Click to copy game ID\"\n          >\n            Room: {gameState.id}\n          </button>\n        </div>\n        <button onClick={onLeaveGame} className=\"leave-btn-new\">Leave Game</button>\n      </div>\n\n      {/* Game Table */}\n      <div className=\"game-table-container\">\n        <div className=\"game-table\">\n          {/* Central Table Area */}\n          <div className=\"table-center\">\n            {/* Trump Card */}\n            {gameState.trumpCard && (\n              <div className=\"trump-card-new\">\n                <div className=\"card trump-new\">\n                  <span className={`card-rank ${gameState.trumpCard.suit === 'hearts' || gameState.trumpCard.suit === 'diamonds' ? 'red' : 'black'}`}>\n                    {gameState.trumpCard.rank}\n                  </span>\n                  <span className={`card-suit ${gameState.trumpCard.suit === 'hearts' || gameState.trumpCard.suit === 'diamonds' ? 'red' : 'black'}`}>\n                    {getSuitSymbol(gameState.trumpCard.suit)}\n                  </span>\n                </div>\n                <div className=\"trump-label\">Trump</div>\n              </div>\n            )}\n\n            {/* Tree Cards */}\n            <div className=\"tree-cards\">\n              <div className=\"tree-card-back\"></div>\n              <div className=\"tree-count\">{gameState.tree.length}</div>\n            </div>\n\n            {/* Current House */}\n            {gameState.currentHouse.length > 0 && (\n              <div className=\"current-house-new\">\n                <div className=\"house-cards-new\">\n                  {gameState.currentHouse.map((houseCard, index) => (\n                    <div key={`${houseCard.playerId}-${houseCard.card.suit}-${houseCard.card.rank}-${index}`} className=\"house-card-new\">\n                      <div className=\"card house-card\">\n                        <span className={`card-rank ${houseCard.card.suit === 'hearts' || houseCard.card.suit === 'diamonds' ? 'red' : 'black'}`}>\n                          {houseCard.card.rank}\n                        </span>\n                        <span className={`card-suit ${houseCard.card.suit === 'hearts' || houseCard.card.suit === 'diamonds' ? 'red' : 'black'}`}>\n                          {getSuitSymbol(houseCard.card.suit)}\n                        </span>\n                      </div>\n                      <div className=\"card-player-name\">{houseCard.playerName}</div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            )}\n\n            {/* Game Status Message */}\n            {gameState.gamePhase === 'dealing' && (\n              <div className=\"game-status\">\n                {gameState.players[gameState.currentPlayerIndex]?.isBot ? '🤖 ' : ''}\n                {gameState.players[gameState.currentPlayerIndex]?.name} is deciding to enter...\n                {gameState.players[gameState.currentPlayerIndex]?.isBot && ' (thinking...)'}\n              </div>\n            )}\n            {gameState.gamePhase === 'exchanging' && (\n              <div className=\"game-status\">\n                {gameState.players[gameState.currentPlayerIndex]?.isBot ? '🤖 ' : ''}\n                {gameState.players[gameState.currentPlayerIndex]?.name} is exchanging cards...\n                {gameState.players[gameState.currentPlayerIndex]?.isBot && ' (thinking...)'}\n              </div>\n            )}\n            {gameState.gamePhase === 'trump_exchanging' && (\n              <div className=\"game-status\">\n                {gameState.players[gameState.currentPlayerIndex]?.isBot ? '🤖 ' : ''}\n                {gameState.players[gameState.currentPlayerIndex]?.name} is exchanging trump card...\n                {gameState.players[gameState.currentPlayerIndex]?.isBot && ' (thinking...)'}\n              </div>\n            )}\n            \n            {/* Bot Action Notification */}\n            {botActionMessage && (\n              <div className=\"bot-action-notification\">\n                {botActionMessage}\n              </div>\n            )}\n          </div>\n\n          {/* Players Around the Table */}\n          {gameState.players.map((player, index) => {\n            const position = getPlayerPosition(index, gameState.players.length, actualPlayerIndex);\n            const isCurrentPlayer = player.id === updatedCurrentPlayer.id;\n            const isActiveTurn = gameState.currentPlayerIndex === index;\n            \n            return (\n              <div\n                key={player.id}\n                className={`player-position ${isCurrentPlayer ? 'current-player' : ''} ${isActiveTurn ? 'active-turn' : ''}`}\n                style={{\n                  '--x': `${position.x}px`,\n                  '--y': `${position.y}px`\n                } as React.CSSProperties}\n              >\n                <div className=\"player-avatar\">\n                  {player.isHost && <span className=\"crown\">👑</span>}\n                  {player.isDealer && <span className=\"dealer-icon\">🎯</span>}\n                  {player.isMouth && <span className=\"mouth-icon\">👄</span>}\n                  {player.isBot && <span className=\"bot-icon\">🤖</span>}\n                  <div className=\"avatar-icon\">\n                    {player.name.charAt(0).toUpperCase()}\n                  </div>\n                </div>\n                \n                <div className=\"player-info-new\">\n                  <div className=\"player-name-new\">{player.name}</div>\n                  <div className=\"player-score-new\">{player.score}/-</div>\n                  <div className=\"player-houses-new\">Houses: {player.housesBuilt}</div>\n                </div>\n\n                                  {/* Player Hand */}\n                <div className=\"player-hand-new\">\n                  {isCurrentPlayer ? (\n                    // Show actual cards for current player\n                    <div className=\"hand-cards\">\n                      {Array.isArray(player.hand) ? player.hand.map((card, cardIndex) => (\n                        <button \n                          key={`${card.suit}-${card.rank}-${cardIndex}`}\n                          className={`card hand-card ${playableCards.includes(cardIndex) ? 'playable' : ''} ${\n                            isMyTurn ? 'my-turn' : ''\n                          } ${selectedCardsForExchange.includes(cardIndex) ? 'selected-for-exchange' : ''}`}\n                          onClick={() => {\n                            if (canExchange) {\n                              handleCardSelectForExchange(cardIndex);\n                            } else if (isMyTurn && playableCards.includes(cardIndex)) {\n                              handlePlayCard(cardIndex);\n                            }\n                          }}\n                          disabled={!isMyTurn || (!canExchange && !playableCards.includes(cardIndex))}\n                          aria-label={`Play ${card.rank} of ${card.suit}`}\n                        >\n                          <span className={`card-rank ${card.suit === 'hearts' || card.suit === 'diamonds' ? 'red' : 'black'}`}>\n                            {card.rank}\n                          </span>\n                          <span className={`card-suit ${card.suit === 'hearts' || card.suit === 'diamonds' ? 'red' : 'black'}`}>\n                            {getSuitSymbol(card.suit)}\n                          </span>\n                        </button>\n                      )) : (\n                        <div className=\"card-count\">{player.hand} cards</div>\n                      )}\n                    </div>\n                  ) : (\n                    // Show card backs for other players\n                    <div className=\"opponent-cards\">\n                      {Array.isArray(player.hand) ? player.hand.map((_, cardIndex) => (\n                        <div key={`${player.id}-card-back-${cardIndex}`} className=\"card card-back\"></div>\n                      )) : (\n                        <div className=\"card-count\">{player.hand} cards</div>\n                      )}\n                    </div>\n                  )}\n                </div>\n\n                {/* Player Status */}\n                <div className=\"player-status-new\">\n                  {player.isReady && <span className=\"ready-badge-new\">Ready</span>}\n                  {player.enteredRound === true && <span className=\"entered-badge-new\">Entered</span>}\n                  {player.enteredRound === false && <span className=\"declined-badge-new\">Declined</span>}\n                  {player.hasExchanged && <span className=\"exchanged-badge-new\">Exchanged</span>}\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n\n      {/* Game Controls */}\n      <div className=\"game-controls-new\">\n        \n        {gameState.gamePhase === 'waiting' && !updatedCurrentPlayer.isReady && (\n          <button onClick={handleReady} className=\"ready-btn-new\">Ready</button>\n        )}\n\n        {(gameState.gamePhase === 'waiting' || gameState.gamePhase === 'playing') && updatedCurrentPlayer.isReady && (\n          <button onClick={handleUnready} className=\"unready-btn-new\">Unready</button>\n        )}\n        \n        {updatedCurrentPlayer.isHost && gameState.gamePhase === 'ready' && (\n          <button onClick={handleStartGame} className=\"start-btn-new\">Start Game</button>\n        )}\n        \n        {canMakeDecision && (\n          <div className=\"decision-buttons-new\">\n            <button onClick={handleEnterTurn} className=\"enter-btn-new\">Enter</button>\n            <button onClick={handleSkipTurn} className=\"skip-btn-new\">Skip</button>\n          </div>\n        )}\n\n        {canExchange && (\n          <div className=\"exchange-controls\">\n            <button \n              onClick={handleExchangeCards} \n              disabled={selectedCardsForExchange.length === 0}\n              className=\"exchange-btn\"\n            >\n              Exchange {selectedCardsForExchange.length} Cards\n            </button>\n            <button onClick={handleSkipExchange} className=\"skip-exchange-btn\">\n              Skip Exchange\n            </button>\n          </div>\n        )}\n\n        {canExchangeTrump && (\n          <div className=\"trump-exchange-controls\">\n            <div className=\"trump-exchange-info\">\n              Select a card to exchange with the trump card ({gameState.trumpCard?.rank} of {gameState.trumpCard?.suit})\n            </div>\n            <div className=\"trump-exchange-cards\">\n              {Array.isArray(updatedCurrentPlayer.hand) && updatedCurrentPlayer.hand.map((card, index) => (\n                <button\n                  key={`trump-exchange-${card.suit}-${card.rank}-${index}`}\n                  className=\"card trump-exchange-card\"\n                  onClick={() => handleExchangeTrump(index)}\n                  aria-label={`Exchange ${card.rank} of ${card.suit} with trump card`}\n                >\n                  <span className={`card-rank ${card.suit === 'hearts' || card.suit === 'diamonds' ? 'red' : 'black'}`}>\n                    {card.rank}\n                  </span>\n                  <span className={`card-suit ${card.suit === 'hearts' || card.suit === 'diamonds' ? 'red' : 'black'}`}>\n                    {getSuitSymbol(card.suit)}\n                  </span>\n                </button>\n              ))}\n            </div>\n            <button onClick={handleSkipTrumpExchange} className=\"skip-trump-exchange-btn\">\n              Skip Trump Exchange\n            </button>\n          </div>\n        )}\n      </div>\n\n      {/* Exchange Modal */}\n      {showExchangeModal && (\n        <div className=\"exchange-modal-overlay\">\n          <div className=\"exchange-modal\">\n            <h3>Exchange Cards</h3>\n            <p>Select cards to exchange with the tree. You can exchange up to {gameState.tree.length} cards.</p>\n            <div className=\"exchange-cards-preview\">\n              {Array.isArray(updatedCurrentPlayer.hand) && updatedCurrentPlayer.hand.map((card, index) => (\n                <button\n                  key={`${card.suit}-${card.rank}-${index}`}\n                  className={`card exchange-card ${selectedCardsForExchange.includes(index) ? 'selected' : ''}`}\n                  onClick={() => handleCardSelectForExchange(index)}\n                >\n                  <span className={`card-rank ${card.suit === 'hearts' || card.suit === 'diamonds' ? 'red' : 'black'}`}>\n                    {card.rank}\n                  </span>\n                  <span className={`card-suit ${card.suit === 'hearts' || card.suit === 'diamonds' ? 'red' : 'black'}`}>\n                    {getSuitSymbol(card.suit)}\n                  </span>\n                </button>\n              ))}\n            </div>\n            <div className=\"exchange-modal-buttons\">\n              <button \n                onClick={handleExchangeCards}\n                disabled={selectedCardsForExchange.length === 0}\n                className=\"confirm-exchange-btn\"\n              >\n                Exchange {selectedCardsForExchange.length} Cards\n              </button>\n              <button onClick={handleSkipExchange} className=\"skip-exchange-btn\">\n                Skip Exchange\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Chat Toggle */}\n      <button \n        onClick={() => setShowChat(!showChat)} \n        className=\"chat-toggle-btn\"\n      >\n        💬\n      </button>\n\n      {/* Chat Panel */}\n      {showChat && (\n        <div className=\"chat-panel\">\n          <div className=\"chat-header\">\n            <h3>Chat</h3>\n            <button onClick={() => setShowChat(false)} className=\"close-chat\">×</button>\n          </div>\n          <div className=\"chat-messages-new\">\n            {gameState.chatMessages.map((message: ChatMessage) => (\n              <div key={message.id} className={`chat-message-new ${message.type}`}>\n                <span className=\"message-sender\">{message.playerName}:</span>\n                <span className=\"message-text\">{message.message}</span>\n              </div>\n            ))}\n          </div>\n          <div className=\"chat-input-new\">\n            <input\n              type=\"text\"\n              placeholder=\"Type a message...\"\n              value={chatMessage}\n              onChange={(e) => setChatMessage(e.target.value)}\n              onKeyDown={handleKeyPress}\n              className=\"message-input-new\"\n            />\n            <button onClick={handleSendChat} className=\"send-btn-new\">Send</button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default GameRoom;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}