{"ast":null,"code":"import React from'react';import{getSuitSymbol}from'../../utils/gameUtils';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ExchangeModal=_ref=>{var _gameState$trumpCard,_gameState$trumpCard2;let{showExchangeModal,isTrumpExchange,gameState,currentPlayer,selectedCardsForExchange,onCardSelectForExchange,onExchangeCards,onSkipExchange}=_ref;if(!showExchangeModal){return null;}return/*#__PURE__*/_jsx(\"div\",{className:\"exchange-modal-overlay\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"exchange-modal\",children:[/*#__PURE__*/_jsx(\"h3\",{children:isTrumpExchange?'Exchange Trump Card':'Exchange Cards'}),isTrumpExchange&&gameState.trumpCard&&/*#__PURE__*/_jsxs(\"div\",{className:\"trump-card-display\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"card trump-new\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"card-rank \".concat(gameState.trumpCard.suit==='hearts'||gameState.trumpCard.suit==='diamonds'?'red':'black'),children:gameState.trumpCard.rank}),/*#__PURE__*/_jsx(\"span\",{className:\"card-suit \".concat(gameState.trumpCard.suit==='hearts'||gameState.trumpCard.suit==='diamonds'?'red':'black'),children:getSuitSymbol(gameState.trumpCard.suit)})]}),/*#__PURE__*/_jsx(\"div\",{className:\"trump-label\",children:\"Trump Card\"})]}),/*#__PURE__*/_jsx(\"p\",{children:isTrumpExchange?\"Select one card to exchange with the trump card (\".concat((_gameState$trumpCard=gameState.trumpCard)===null||_gameState$trumpCard===void 0?void 0:_gameState$trumpCard.rank,\" of \").concat((_gameState$trumpCard2=gameState.trumpCard)===null||_gameState$trumpCard2===void 0?void 0:_gameState$trumpCard2.suit,\")\"):\"Select cards to exchange with the tree. You can exchange up to \".concat(gameState.tree.length,\" cards.\")}),/*#__PURE__*/_jsx(\"div\",{className:\"exchange-cards-preview\",children:Array.isArray(currentPlayer.hand)&&currentPlayer.hand.map((card,index)=>{const isSelected=selectedCardsForExchange.includes(index);const maxReached=!isTrumpExchange&&selectedCardsForExchange.length>=gameState.tree.length&&!isSelected;return/*#__PURE__*/_jsxs(\"button\",{className:\"card exchange-card \".concat(isSelected?'selected':'',\" \").concat(maxReached?'disabled':''),onClick:()=>onCardSelectForExchange(index),disabled:maxReached,title:maxReached?\"Cannot select more than \".concat(gameState.tree.length,\" cards\"):'',children:[/*#__PURE__*/_jsx(\"span\",{className:\"card-rank \".concat(card.suit==='hearts'||card.suit==='diamonds'?'red':'black'),children:card.rank}),/*#__PURE__*/_jsx(\"span\",{className:\"card-suit \".concat(card.suit==='hearts'||card.suit==='diamonds'?'red':'black'),children:getSuitSymbol(card.suit)})]},\"\".concat(card.suit,\"-\").concat(card.rank,\"-\").concat(index));})}),/*#__PURE__*/_jsxs(\"div\",{className:\"exchange-modal-buttons\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:onExchangeCards,disabled:selectedCardsForExchange.length===0||!isTrumpExchange&&selectedCardsForExchange.length>gameState.tree.length,className:\"confirm-exchange-btn\",children:isTrumpExchange?\"Exchange \".concat(selectedCardsForExchange.length,\" Card\"):\"Exchange \".concat(selectedCardsForExchange.length,\" Cards (max \").concat(gameState.tree.length,\")\")}),/*#__PURE__*/_jsx(\"button\",{onClick:onSkipExchange,className:\"skip-exchange-btn\",children:isTrumpExchange?'Skip Trump Exchange':'Skip Exchange'})]})]})});};export default ExchangeModal;","map":{"version":3,"names":["React","getSuitSymbol","jsx","_jsx","jsxs","_jsxs","ExchangeModal","_ref","_gameState$trumpCard","_gameState$trumpCard2","showExchangeModal","isTrumpExchange","gameState","currentPlayer","selectedCardsForExchange","onCardSelectForExchange","onExchangeCards","onSkipExchange","className","children","trumpCard","concat","suit","rank","tree","length","Array","isArray","hand","map","card","index","isSelected","includes","maxReached","onClick","disabled","title"],"sources":["/Users/enkhmendeee/muushig/client/src/components/game/ExchangeModal.tsx"],"sourcesContent":["import React from 'react';\nimport { GameState, Player } from '../../types/game';\nimport { getSuitSymbol } from '../../utils/gameUtils';\n\ninterface ExchangeModalProps {\n  showExchangeModal: boolean;\n  isTrumpExchange: boolean;\n  gameState: GameState;\n  currentPlayer: Player;\n  selectedCardsForExchange: number[];\n  onCardSelectForExchange: (cardIndex: number) => void;\n  onExchangeCards: () => void;\n  onSkipExchange: () => void;\n}\n\nconst ExchangeModal: React.FC<ExchangeModalProps> = ({\n  showExchangeModal,\n  isTrumpExchange,\n  gameState,\n  currentPlayer,\n  selectedCardsForExchange,\n  onCardSelectForExchange,\n  onExchangeCards,\n  onSkipExchange\n}) => {\n  if (!showExchangeModal) {\n    return null;\n  }\n\n  return (\n    <div className=\"exchange-modal-overlay\">\n      <div className=\"exchange-modal\">\n        <h3>{isTrumpExchange ? 'Exchange Trump Card' : 'Exchange Cards'}</h3>\n        {isTrumpExchange && gameState.trumpCard && (\n          <div className=\"trump-card-display\">\n            <div className=\"card trump-new\">\n              <span className={`card-rank ${gameState.trumpCard.suit === 'hearts' || gameState.trumpCard.suit === 'diamonds' ? 'red' : 'black'}`}>\n                {gameState.trumpCard.rank}\n              </span>\n              <span className={`card-suit ${gameState.trumpCard.suit === 'hearts' || gameState.trumpCard.suit === 'diamonds' ? 'red' : 'black'}`}>\n                {getSuitSymbol(gameState.trumpCard.suit)}\n              </span>\n            </div>\n            <div className=\"trump-label\">Trump Card</div>\n          </div>\n        )}\n        <p>\n          {isTrumpExchange \n            ? `Select one card to exchange with the trump card (${gameState.trumpCard?.rank} of ${gameState.trumpCard?.suit})`\n            : `Select cards to exchange with the tree. You can exchange up to ${gameState.tree.length} cards.`\n          }\n        </p>\n        <div className=\"exchange-cards-preview\">\n          {Array.isArray(currentPlayer.hand) && currentPlayer.hand.map((card, index) => {\n            const isSelected = selectedCardsForExchange.includes(index);\n            const maxReached = !isTrumpExchange && selectedCardsForExchange.length >= gameState.tree.length && !isSelected;\n            \n            return (\n              <button\n                key={`${card.suit}-${card.rank}-${index}`}\n                className={`card exchange-card ${isSelected ? 'selected' : ''} ${maxReached ? 'disabled' : ''}`}\n                onClick={() => onCardSelectForExchange(index)}\n                disabled={maxReached}\n                title={maxReached ? `Cannot select more than ${gameState.tree.length} cards` : ''}\n              >\n                <span className={`card-rank ${card.suit === 'hearts' || card.suit === 'diamonds' ? 'red' : 'black'}`}>\n                  {card.rank}\n                </span>\n                <span className={`card-suit ${card.suit === 'hearts' || card.suit === 'diamonds' ? 'red' : 'black'}`}>\n                  {getSuitSymbol(card.suit)}\n                </span>\n              </button>\n            );\n          })}\n        </div>\n        <div className=\"exchange-modal-buttons\">\n          <button \n            onClick={onExchangeCards}\n            disabled={selectedCardsForExchange.length === 0 || (!isTrumpExchange && selectedCardsForExchange.length > gameState.tree.length)}\n            className=\"confirm-exchange-btn\"\n          >\n            {isTrumpExchange \n              ? `Exchange ${selectedCardsForExchange.length} Card`\n              : `Exchange ${selectedCardsForExchange.length} Cards (max ${gameState.tree.length})`\n            }\n          </button>\n          <button onClick={onSkipExchange} className=\"skip-exchange-btn\">\n            {isTrumpExchange ? 'Skip Trump Exchange' : 'Skip Exchange'}\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ExchangeModal;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}