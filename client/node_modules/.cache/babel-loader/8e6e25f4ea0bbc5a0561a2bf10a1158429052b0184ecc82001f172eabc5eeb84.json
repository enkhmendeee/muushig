{"ast":null,"code":"var _jsxFileName = \"/Users/enkhmendeee/muushig/client/src/pages/GameRoom.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { getSuitSymbol } from '../utils/gameUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GameRoom = ({\n  socket,\n  gameState,\n  currentPlayer,\n  onLeaveGame\n}) => {\n  _s();\n  var _gameState$players$ga, _gameState$players$ga2, _gameState$players$ga3, _gameState$players$ga4, _gameState$players$ga5, _gameState$players$ga6, _gameState$players$ga7, _gameState$players$ga8, _gameState$players$ga9, _gameState$players$ga0, _gameState$players$ga1, _gameState$trumpCard, _gameState$trumpCard2;\n  const [chatMessage, setChatMessage] = useState('');\n  const [playableCards, setPlayableCards] = useState([]);\n  const [showChat, setShowChat] = useState(false);\n  const [selectedCardsForExchange, setSelectedCardsForExchange] = useState([]);\n  const [showExchangeModal, setShowExchangeModal] = useState(false);\n  const [isTrumpExchange, setIsTrumpExchange] = useState(false);\n  const [botActionMessage, setBotActionMessage] = useState('');\n  const actualPlayerIndex = gameState.players.findIndex(player => player.id === currentPlayer.id);\n  const prevPlayersRef = React.useRef(gameState.players);\n\n  // Update currentPlayer with latest data from gameState\n  const updatedCurrentPlayer = gameState.players.find(player => player.id === currentPlayer.id) || currentPlayer;\n  useEffect(() => {\n    if (socket && gameState.gamePhase === 'playing') {\n      socket.emit('get_playable_cards', {\n        gameId: gameState.id\n      });\n    }\n  }, [socket, gameState.gamePhase, actualPlayerIndex]);\n  useEffect(() => {\n    if (!socket) return;\n    socket.on('playable_cards', data => {\n      if (data.gameId === gameState.id) {\n        setPlayableCards(data.playableCards);\n      }\n    });\n    return () => {\n      socket.off('playable_cards');\n    };\n  }, [socket, gameState.id]);\n\n  // Track bot decisions and show notifications\n  useEffect(() => {\n    const currentPlayer = gameState.players[gameState.currentPlayerIndex];\n    if (currentPlayer !== null && currentPlayer !== void 0 && currentPlayer.isBot) {\n      // Clear any existing bot action message when a new bot starts thinking\n      setBotActionMessage('');\n    }\n  }, [gameState.currentPlayerIndex, gameState.players]);\n\n  // Track when bots make decisions\n  useEffect(() => {\n    const prevPlayers = prevPlayersRef.current;\n    const currentPlayers = gameState.players;\n    currentPlayers.forEach((player, index) => {\n      const prevPlayer = prevPlayers[index];\n      if (player.isBot && prevPlayer && prevPlayer.enteredRound === undefined && player.enteredRound !== undefined) {\n        const action = player.enteredRound ? 'entered' : 'declined';\n        setBotActionMessage(`${player.name} ${action} the round`);\n\n        // Clear the message after 3 seconds\n        setTimeout(() => {\n          setBotActionMessage('');\n        }, 3000);\n      }\n\n      // Track exchange decisions\n      if (player.isBot && prevPlayer && !prevPlayer.hasExchanged && player.hasExchanged) {\n        const action = gameState.gamePhase === 'trump_exchanging' ? 'exchanged trump card' : 'exchanged cards';\n        setBotActionMessage(`${player.name} ${action}`);\n\n        // Clear the message after 3 seconds\n        setTimeout(() => {\n          setBotActionMessage('');\n        }, 3000);\n      }\n    });\n    prevPlayersRef.current = currentPlayers;\n  }, [gameState.players]);\n  const handleReady = () => {\n    if (!socket) return;\n    socket.emit('ready_check', {\n      gameId: gameState.id,\n      isReady: true\n    });\n  };\n  const handleUnready = () => {\n    if (!socket) return;\n    socket.emit('ready_check', {\n      gameId: gameState.id,\n      isReady: false\n    });\n  };\n  const handleStartGame = () => {\n    if (!socket) return;\n    socket.emit('start_game', {\n      gameId: gameState.id\n    });\n  };\n  const handleEnterTurn = () => {\n    if (!socket) return;\n    socket.emit('enter_turn', {\n      gameId: gameState.id\n    });\n  };\n  const handleSkipTurn = () => {\n    if (!socket) return;\n    socket.emit('skip_turn', {\n      gameId: gameState.id\n    });\n  };\n  const handlePlayCard = cardIndex => {\n    if (!socket) return;\n    socket.emit('play_card', {\n      gameId: gameState.id,\n      cardIndex\n    });\n  };\n  const handleCardSelectForExchange = cardIndex => {\n    setSelectedCardsForExchange(prev => {\n      if (prev.includes(cardIndex)) {\n        return prev.filter(index => index !== cardIndex);\n      } else {\n        if (isTrumpExchange) {\n          // For trump exchange, only allow one card selection\n          return [cardIndex];\n        } else {\n          return [...prev, cardIndex];\n        }\n      }\n    });\n  };\n  const handleExchangeCards = () => {\n    if (!socket || selectedCardsForExchange.length === 0) return;\n    if (isTrumpExchange) {\n      // For trump exchange, only exchange the first selected card\n      socket.emit('exchange_trump', {\n        gameId: gameState.id,\n        cardIndex: selectedCardsForExchange[0]\n      });\n    } else {\n      // For regular exchange\n      socket.emit('exchange_cards', {\n        gameId: gameState.id,\n        cardIndices: selectedCardsForExchange\n      });\n    }\n    setSelectedCardsForExchange([]);\n    setShowExchangeModal(false);\n    setIsTrumpExchange(false);\n  };\n  const handleSkipExchange = () => {\n    if (!socket) return;\n    if (isTrumpExchange) {\n      socket.emit('exchange_trump', {\n        gameId: gameState.id,\n        cardIndex: -1\n      });\n    } else {\n      socket.emit('exchange_cards', {\n        gameId: gameState.id,\n        cardIndices: []\n      });\n    }\n    setShowExchangeModal(false);\n    setIsTrumpExchange(false);\n  };\n  const handleExchangeTrump = cardIndex => {\n    if (!socket) return;\n    socket.emit('exchange_trump', {\n      gameId: gameState.id,\n      cardIndex\n    });\n  };\n  const handleOpenTrumpExchange = () => {\n    setIsTrumpExchange(true);\n    setSelectedCardsForExchange([]);\n    setShowExchangeModal(true);\n  };\n  const handleSkipTrumpExchange = () => {\n    if (!socket) return;\n    socket.emit('exchange_trump', {\n      gameId: gameState.id,\n      cardIndex: -1\n    });\n  };\n  const handleSendChat = () => {\n    if (!socket || !chatMessage.trim()) return;\n    socket.emit('send_chat', {\n      gameId: gameState.id,\n      message: chatMessage.trim()\n    });\n    setChatMessage('');\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendChat();\n    }\n  };\n  const isMyTurn = ((_gameState$players$ga = gameState.players[gameState.currentPlayerIndex]) === null || _gameState$players$ga === void 0 ? void 0 : _gameState$players$ga.id) === updatedCurrentPlayer.id;\n  const canMakeDecision = gameState.gamePhase === 'dealing' && updatedCurrentPlayer.enteredRound === undefined && isMyTurn;\n  const canExchange = gameState.gamePhase === 'exchanging' && updatedCurrentPlayer.enteredRound === true && !updatedCurrentPlayer.hasExchanged && isMyTurn;\n  const canExchangeTrump = gameState.gamePhase === 'trump_exchanging' && updatedCurrentPlayer.enteredRound === true && updatedCurrentPlayer.isDealer && !updatedCurrentPlayer.hasExchanged && ((_gameState$players$ga2 = gameState.players[gameState.currentPlayerIndex]) === null || _gameState$players$ga2 === void 0 ? void 0 : _gameState$players$ga2.id) === updatedCurrentPlayer.id;\n\n  // Calculate player positions around the table\n  const getPlayerPosition = (index, totalPlayers, actualPlayerIndex) => {\n    // Calculate relative position (how many positions away from current player)\n    let relativeIndex = index - actualPlayerIndex;\n    if (relativeIndex < 0) {\n      relativeIndex += totalPlayers;\n    }\n\n    // Position current player at bottom (270 degrees), others relative to that\n    const angle = relativeIndex * 360 / totalPlayers + 90; // Start from bottom\n\n    // Adjust radius based on number of players to prevent overlapping\n    const baseRadius = 250;\n    const radius = totalPlayers <= 3 ? baseRadius : baseRadius + (totalPlayers - 3) * 30;\n    const x = Math.cos(angle * Math.PI / 180) * radius;\n    const y = Math.sin(angle * Math.PI / 180) * radius;\n    return {\n      x,\n      y\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-room-new\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-header-new\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"room-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"phase-badge-new\",\n          children: gameState.gamePhase.replace('_', ' ')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"bot-info\",\n          children: [\"\\uD83E\\uDD16 \", gameState.players.filter(p => p.isBot).length, \" Bots\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"room-id-center\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"room-badge-clickable\",\n          onClick: () => {\n            navigator.clipboard.writeText(gameState.id);\n            // Optional: Show a brief notification\n            const button = document.querySelector('.room-badge-clickable');\n            if (button) {\n              const originalText = button.textContent;\n              button.textContent = 'Copied!';\n              button.classList.add('copied');\n              setTimeout(() => {\n                button.textContent = originalText;\n                button.classList.remove('copied');\n              }, 2000);\n            }\n          },\n          title: \"Click to copy game ID\",\n          children: [\"Room: \", gameState.id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onLeaveGame,\n        className: \"leave-btn-new\",\n        children: \"Leave Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-table-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"table-center\",\n          children: [gameState.trumpCard && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"trump-card-new\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card trump-new\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: `card-rank ${gameState.trumpCard.suit === 'hearts' || gameState.trumpCard.suit === 'diamonds' ? 'red' : 'black'}`,\n                children: gameState.trumpCard.rank\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `card-suit ${gameState.trumpCard.suit === 'hearts' || gameState.trumpCard.suit === 'diamonds' ? 'red' : 'black'}`,\n                children: getSuitSymbol(gameState.trumpCard.suit)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"trump-label\",\n              children: \"Trump\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tree-cards\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tree-card-back\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tree-count\",\n              children: gameState.tree.length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 13\n          }, this), gameState.currentHouse.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"current-house-new\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"house-cards-new\",\n              children: gameState.currentHouse.map((houseCard, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"house-card-new\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card house-card\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: `card-rank ${houseCard.card.suit === 'hearts' || houseCard.card.suit === 'diamonds' ? 'red' : 'black'}`,\n                    children: houseCard.card.rank\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 293,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: `card-suit ${houseCard.card.suit === 'hearts' || houseCard.card.suit === 'diamonds' ? 'red' : 'black'}`,\n                    children: getSuitSymbol(houseCard.card.suit)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 296,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 292,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-player-name\",\n                  children: houseCard.playerName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 300,\n                  columnNumber: 23\n                }, this)]\n              }, `${houseCard.playerId}-${houseCard.card.suit}-${houseCard.card.rank}-${index}`, true, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 15\n          }, this), gameState.gamePhase === 'dealing' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"game-status\",\n            children: [(_gameState$players$ga3 = gameState.players[gameState.currentPlayerIndex]) !== null && _gameState$players$ga3 !== void 0 && _gameState$players$ga3.isBot ? '🤖 ' : '', (_gameState$players$ga4 = gameState.players[gameState.currentPlayerIndex]) === null || _gameState$players$ga4 === void 0 ? void 0 : _gameState$players$ga4.name, \" is deciding to enter...\", ((_gameState$players$ga5 = gameState.players[gameState.currentPlayerIndex]) === null || _gameState$players$ga5 === void 0 ? void 0 : _gameState$players$ga5.isBot) && ' (thinking...)']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 15\n          }, this), gameState.gamePhase === 'exchanging' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"game-status\",\n            children: [(_gameState$players$ga6 = gameState.players[gameState.currentPlayerIndex]) !== null && _gameState$players$ga6 !== void 0 && _gameState$players$ga6.isBot ? '🤖 ' : '', (_gameState$players$ga7 = gameState.players[gameState.currentPlayerIndex]) === null || _gameState$players$ga7 === void 0 ? void 0 : _gameState$players$ga7.name, \" is exchanging cards...\", ((_gameState$players$ga8 = gameState.players[gameState.currentPlayerIndex]) === null || _gameState$players$ga8 === void 0 ? void 0 : _gameState$players$ga8.isBot) && ' (thinking...)']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 15\n          }, this), gameState.gamePhase === 'trump_exchanging' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"game-status\",\n            children: [(_gameState$players$ga9 = gameState.players[gameState.currentPlayerIndex]) !== null && _gameState$players$ga9 !== void 0 && _gameState$players$ga9.isBot ? '🤖 ' : '', (_gameState$players$ga0 = gameState.players[gameState.currentPlayerIndex]) === null || _gameState$players$ga0 === void 0 ? void 0 : _gameState$players$ga0.name, \" is exchanging trump card...\", ((_gameState$players$ga1 = gameState.players[gameState.currentPlayerIndex]) === null || _gameState$players$ga1 === void 0 ? void 0 : _gameState$players$ga1.isBot) && ' (thinking...)']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 15\n          }, this), botActionMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bot-action-notification\",\n            children: botActionMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this), gameState.players.map((player, index) => {\n          const position = getPlayerPosition(index, gameState.players.length, actualPlayerIndex);\n          const isCurrentPlayer = player.id === updatedCurrentPlayer.id;\n          const isActiveTurn = gameState.currentPlayerIndex === index;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `player-position ${isCurrentPlayer ? 'current-player' : ''} ${isActiveTurn ? 'active-turn' : ''}`,\n            style: {\n              '--x': `${position.x}px`,\n              '--y': `${position.y}px`\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"player-avatar\",\n              children: [player.isHost && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"crown\",\n                children: \"\\uD83D\\uDC51\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 354,\n                columnNumber: 37\n              }, this), player.isDealer && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"dealer-icon\",\n                children: \"\\uD83C\\uDFAF\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 355,\n                columnNumber: 39\n              }, this), player.isMouth && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"mouth-icon\",\n                children: \"\\uD83D\\uDC44\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 356,\n                columnNumber: 38\n              }, this), player.isBot && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"bot-icon\",\n                children: \"\\uD83E\\uDD16\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 357,\n                columnNumber: 36\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"avatar-icon\",\n                children: player.name.charAt(0).toUpperCase()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 358,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"player-info-new\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"player-name-new\",\n                children: player.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 364,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"player-score-new\",\n                children: [player.score, \"/-\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 365,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"player-houses-new\",\n                children: [\"Houses: \", player.housesBuilt]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 366,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"player-hand-new\",\n              children: isCurrentPlayer ?\n              /*#__PURE__*/\n              // Show actual cards for current player\n              _jsxDEV(\"div\", {\n                className: \"hand-cards\",\n                children: Array.isArray(player.hand) ? player.hand.map((card, cardIndex) => /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: `card hand-card ${playableCards.includes(cardIndex) ? 'playable' : ''} ${isMyTurn ? 'my-turn' : ''} ${selectedCardsForExchange.includes(cardIndex) ? 'selected-for-exchange' : ''}`,\n                  onClick: () => {\n                    if (canExchange) {\n                      handleCardSelectForExchange(cardIndex);\n                    } else if (isMyTurn && playableCards.includes(cardIndex)) {\n                      handlePlayCard(cardIndex);\n                    }\n                  },\n                  disabled: !isMyTurn || !canExchange && !playableCards.includes(cardIndex),\n                  \"aria-label\": `Play ${card.rank} of ${card.suit}`,\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: `card-rank ${card.suit === 'hearts' || card.suit === 'diamonds' ? 'red' : 'black'}`,\n                    children: card.rank\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 390,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: `card-suit ${card.suit === 'hearts' || card.suit === 'diamonds' ? 'red' : 'black'}`,\n                    children: getSuitSymbol(card.suit)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 393,\n                    columnNumber: 27\n                  }, this)]\n                }, `${card.suit}-${card.rank}-${cardIndex}`, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 375,\n                  columnNumber: 25\n                }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-count\",\n                  children: [player.hand, \" cards\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 398,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 373,\n                columnNumber: 21\n              }, this) :\n              /*#__PURE__*/\n              // Show card backs for other players\n              _jsxDEV(\"div\", {\n                className: \"opponent-cards\",\n                children: Array.isArray(player.hand) ? player.hand.map((_, cardIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card card-back\"\n                }, `${player.id}-card-back-${cardIndex}`, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 405,\n                  columnNumber: 25\n                }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-count\",\n                  children: [player.hand, \" cards\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 407,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 403,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"player-status-new\",\n              children: [player.isReady && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"ready-badge-new\",\n                children: \"Ready\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 415,\n                columnNumber: 38\n              }, this), player.enteredRound === true && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"entered-badge-new\",\n                children: \"Entered\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 416,\n                columnNumber: 52\n              }, this), player.enteredRound === false && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"declined-badge-new\",\n                children: \"Declined\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 417,\n                columnNumber: 53\n              }, this), player.hasExchanged && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"exchanged-badge-new\",\n                children: \"Exchanged\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 418,\n                columnNumber: 43\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 414,\n              columnNumber: 17\n            }, this)]\n          }, player.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 15\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-controls-new\",\n      children: [gameState.gamePhase === 'waiting' && !updatedCurrentPlayer.isReady && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleReady,\n        className: \"ready-btn-new\",\n        children: \"Ready\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 11\n      }, this), gameState.gamePhase === 'waiting' && updatedCurrentPlayer.isReady && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUnready,\n        className: \"unready-btn-new\",\n        children: \"Unready\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 11\n      }, this), updatedCurrentPlayer.isHost && gameState.gamePhase === 'ready' && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleStartGame,\n        className: \"start-btn-new\",\n        children: \"Start Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 11\n      }, this), canMakeDecision && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"decision-buttons-new\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleEnterTurn,\n          className: \"enter-btn-new\",\n          children: \"Enter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSkipTurn,\n          className: \"skip-btn-new\",\n          children: \"Skip\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 11\n      }, this), canExchange && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"exchange-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleExchangeCards,\n          disabled: selectedCardsForExchange.length === 0,\n          className: \"exchange-btn\",\n          children: [\"Exchange \", selectedCardsForExchange.length, \" Cards\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSkipExchange,\n          className: \"skip-exchange-btn\",\n          children: \"Skip Exchange\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 11\n      }, this), canExchangeTrump && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"exchange-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleOpenTrumpExchange,\n          className: \"exchange-btn\",\n          children: \"Exchange Trump Card\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSkipTrumpExchange,\n          className: \"skip-exchange-btn\",\n          children: \"Skip Trump Exchange\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 7\n    }, this), showExchangeModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"exchange-modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"exchange-modal\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: isTrumpExchange ? 'Exchange Trump Card' : 'Exchange Cards'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 13\n        }, this), isTrumpExchange && gameState.trumpCard && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"trump-card-display\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card trump-new\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: `card-rank ${gameState.trumpCard.suit === 'hearts' || gameState.trumpCard.suit === 'diamonds' ? 'red' : 'black'}`,\n              children: gameState.trumpCard.rank\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 486,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `card-suit ${gameState.trumpCard.suit === 'hearts' || gameState.trumpCard.suit === 'diamonds' ? 'red' : 'black'}`,\n              children: getSuitSymbol(gameState.trumpCard.suit)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 489,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 485,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"trump-label\",\n            children: \"Trump Card\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 493,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: isTrumpExchange ? `Select one card to exchange with the trump card (${(_gameState$trumpCard = gameState.trumpCard) === null || _gameState$trumpCard === void 0 ? void 0 : _gameState$trumpCard.rank} of ${(_gameState$trumpCard2 = gameState.trumpCard) === null || _gameState$trumpCard2 === void 0 ? void 0 : _gameState$trumpCard2.suit})` : `Select cards to exchange with the tree. You can exchange up to ${gameState.tree.length} cards.`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"exchange-cards-preview\",\n          children: Array.isArray(updatedCurrentPlayer.hand) && updatedCurrentPlayer.hand.map((card, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `card exchange-card ${selectedCardsForExchange.includes(index) ? 'selected' : ''}`,\n            onClick: () => handleCardSelectForExchange(index),\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: `card-rank ${card.suit === 'hearts' || card.suit === 'diamonds' ? 'red' : 'black'}`,\n              children: card.rank\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 509,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `card-suit ${card.suit === 'hearts' || card.suit === 'diamonds' ? 'red' : 'black'}`,\n              children: getSuitSymbol(card.suit)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 512,\n              columnNumber: 19\n            }, this)]\n          }, `${card.suit}-${card.rank}-${index}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 504,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 502,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"exchange-modal-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleExchangeCards,\n            disabled: selectedCardsForExchange.length === 0,\n            className: \"confirm-exchange-btn\",\n            children: isTrumpExchange ? `Exchange ${selectedCardsForExchange.length} Card` : `Exchange ${selectedCardsForExchange.length} Cards`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 519,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSkipExchange,\n            className: \"skip-exchange-btn\",\n            children: isTrumpExchange ? 'Skip Trump Exchange' : 'Skip Exchange'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 529,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 518,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 480,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShowChat(!showChat),\n      className: \"chat-toggle-btn\",\n      children: \"\\uD83D\\uDCAC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 538,\n      columnNumber: 7\n    }, this), showChat && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 549,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowChat(false),\n          className: \"close-chat\",\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 550,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 548,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-messages-new\",\n        children: gameState.chatMessages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `chat-message-new ${message.type}`,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"message-sender\",\n            children: [message.playerName, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 555,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"message-text\",\n            children: message.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 556,\n            columnNumber: 17\n          }, this)]\n        }, message.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 554,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 552,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input-new\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Type a message...\",\n          value: chatMessage,\n          onChange: e => setChatMessage(e.target.value),\n          onKeyDown: handleKeyPress,\n          className: \"message-input-new\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 561,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSendChat,\n          className: \"send-btn-new\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 569,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 560,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 547,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 228,\n    columnNumber: 5\n  }, this);\n};\n_s(GameRoom, \"8NQa9feZoiRilTw0WmObzPUceso=\");\n_c = GameRoom;\nexport default GameRoom;\nvar _c;\n$RefreshReg$(_c, \"GameRoom\");","map":{"version":3,"names":["React","useState","useEffect","getSuitSymbol","jsxDEV","_jsxDEV","GameRoom","socket","gameState","currentPlayer","onLeaveGame","_s","_gameState$players$ga","_gameState$players$ga2","_gameState$players$ga3","_gameState$players$ga4","_gameState$players$ga5","_gameState$players$ga6","_gameState$players$ga7","_gameState$players$ga8","_gameState$players$ga9","_gameState$players$ga0","_gameState$players$ga1","_gameState$trumpCard","_gameState$trumpCard2","chatMessage","setChatMessage","playableCards","setPlayableCards","showChat","setShowChat","selectedCardsForExchange","setSelectedCardsForExchange","showExchangeModal","setShowExchangeModal","isTrumpExchange","setIsTrumpExchange","botActionMessage","setBotActionMessage","actualPlayerIndex","players","findIndex","player","id","prevPlayersRef","useRef","updatedCurrentPlayer","find","gamePhase","emit","gameId","on","data","off","currentPlayerIndex","isBot","prevPlayers","current","currentPlayers","forEach","index","prevPlayer","enteredRound","undefined","action","name","setTimeout","hasExchanged","handleReady","isReady","handleUnready","handleStartGame","handleEnterTurn","handleSkipTurn","handlePlayCard","cardIndex","handleCardSelectForExchange","prev","includes","filter","handleExchangeCards","length","cardIndices","handleSkipExchange","handleExchangeTrump","handleOpenTrumpExchange","handleSkipTrumpExchange","handleSendChat","trim","message","handleKeyPress","e","key","shiftKey","preventDefault","isMyTurn","canMakeDecision","canExchange","canExchangeTrump","isDealer","getPlayerPosition","totalPlayers","relativeIndex","angle","baseRadius","radius","x","Math","cos","PI","y","sin","className","children","replace","fileName","_jsxFileName","lineNumber","columnNumber","p","onClick","navigator","clipboard","writeText","button","document","querySelector","originalText","textContent","classList","add","remove","title","trumpCard","suit","rank","tree","currentHouse","map","houseCard","card","playerName","playerId","position","isCurrentPlayer","isActiveTurn","style","isHost","isMouth","charAt","toUpperCase","score","housesBuilt","Array","isArray","hand","disabled","_","chatMessages","type","placeholder","value","onChange","target","onKeyDown","_c","$RefreshReg$"],"sources":["/Users/enkhmendeee/muushig/client/src/pages/GameRoom.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Socket } from 'socket.io-client';\nimport { Player, GameState, ChatMessage } from '../types/game';\nimport { getSuitSymbol } from '../utils/gameUtils';\n\nconst GameRoom: React.FC<{\n  socket: Socket | null;\n  gameState: GameState;\n  currentPlayer: Player;\n  onLeaveGame: () => void;\n}> = ({ socket, gameState, currentPlayer, onLeaveGame }) => {\n  const [chatMessage, setChatMessage] = useState('');\n  const [playableCards, setPlayableCards] = useState<number[]>([]);\n  const [showChat, setShowChat] = useState(false);\n  const [selectedCardsForExchange, setSelectedCardsForExchange] = useState<number[]>([]);\n  const [showExchangeModal, setShowExchangeModal] = useState(false);\n  const [isTrumpExchange, setIsTrumpExchange] = useState(false);\n  const [botActionMessage, setBotActionMessage] = useState<string>('');\n  const actualPlayerIndex = gameState.players.findIndex(player => player.id === currentPlayer.id);\n  const prevPlayersRef = React.useRef(gameState.players);\n  \n  // Update currentPlayer with latest data from gameState\n  const updatedCurrentPlayer = gameState.players.find(player => player.id === currentPlayer.id) || currentPlayer;\n\n  useEffect(() => {\n    if (socket && gameState.gamePhase === 'playing') {\n      socket.emit('get_playable_cards', { gameId: gameState.id });\n    }\n  }, [socket, gameState.gamePhase, actualPlayerIndex]);\n\n  useEffect(() => {\n    if (!socket) return;\n\n    socket.on('playable_cards', (data: { gameId: string; playableCards: number[] }) => {\n      if (data.gameId === gameState.id) {\n        setPlayableCards(data.playableCards);\n      }\n    });\n\n    return () => {\n      socket.off('playable_cards');\n    };\n  }, [socket, gameState.id]);\n\n  // Track bot decisions and show notifications\n  useEffect(() => {\n    const currentPlayer = gameState.players[gameState.currentPlayerIndex];\n    if (currentPlayer?.isBot) {\n      // Clear any existing bot action message when a new bot starts thinking\n      setBotActionMessage('');\n    }\n  }, [gameState.currentPlayerIndex, gameState.players]);\n\n  // Track when bots make decisions\n  useEffect(() => {\n    const prevPlayers = prevPlayersRef.current;\n    const currentPlayers = gameState.players;\n    \n    currentPlayers.forEach((player, index) => {\n      const prevPlayer = prevPlayers[index];\n      if (player.isBot && \n          prevPlayer && \n          prevPlayer.enteredRound === undefined && \n          player.enteredRound !== undefined) {\n        const action = player.enteredRound ? 'entered' : 'declined';\n        setBotActionMessage(`${player.name} ${action} the round`);\n        \n        // Clear the message after 3 seconds\n        setTimeout(() => {\n          setBotActionMessage('');\n        }, 3000);\n      }\n      \n      // Track exchange decisions\n      if (player.isBot && \n          prevPlayer && \n          !prevPlayer.hasExchanged && \n          player.hasExchanged) {\n        const action = gameState.gamePhase === 'trump_exchanging' ? 'exchanged trump card' : 'exchanged cards';\n        setBotActionMessage(`${player.name} ${action}`);\n        \n        // Clear the message after 3 seconds\n        setTimeout(() => {\n          setBotActionMessage('');\n        }, 3000);\n      }\n    });\n    \n    prevPlayersRef.current = currentPlayers;\n  }, [gameState.players]);\n\n  const handleReady = () => {\n    if (!socket) return;\n    socket.emit('ready_check', { gameId: gameState.id, isReady: true });\n  };\n\n  const handleUnready = () => {\n    if (!socket) return;\n    socket.emit('ready_check', { gameId: gameState.id, isReady: false });\n  };\n\n  const handleStartGame = () => {\n    if (!socket) return;\n    socket.emit('start_game', { gameId: gameState.id });\n  };\n\n  const handleEnterTurn = () => {\n    if (!socket) return;\n    socket.emit('enter_turn', { gameId: gameState.id });\n  };\n\n  const handleSkipTurn = () => {\n    if (!socket) return;\n    socket.emit('skip_turn', { gameId: gameState.id });\n  };\n\n  const handlePlayCard = (cardIndex: number) => {\n    if (!socket) return;\n    socket.emit('play_card', { gameId: gameState.id, cardIndex });\n  };\n\n  const handleCardSelectForExchange = (cardIndex: number) => {\n    setSelectedCardsForExchange(prev => {\n      if (prev.includes(cardIndex)) {\n        return prev.filter(index => index !== cardIndex);\n      } else {\n        if (isTrumpExchange) {\n          // For trump exchange, only allow one card selection\n          return [cardIndex];\n        } else {\n          return [...prev, cardIndex];\n        }\n      }\n    });\n  };\n\n  const handleExchangeCards = () => {\n    if (!socket || selectedCardsForExchange.length === 0) return;\n    \n    if (isTrumpExchange) {\n      // For trump exchange, only exchange the first selected card\n      socket.emit('exchange_trump', { \n        gameId: gameState.id, \n        cardIndex: selectedCardsForExchange[0] \n      });\n    } else {\n      // For regular exchange\n      socket.emit('exchange_cards', { \n        gameId: gameState.id, \n        cardIndices: selectedCardsForExchange \n      });\n    }\n    \n    setSelectedCardsForExchange([]);\n    setShowExchangeModal(false);\n    setIsTrumpExchange(false);\n  };\n\n  const handleSkipExchange = () => {\n    if (!socket) return;\n    \n    if (isTrumpExchange) {\n      socket.emit('exchange_trump', { gameId: gameState.id, cardIndex: -1 });\n    } else {\n      socket.emit('exchange_cards', { gameId: gameState.id, cardIndices: [] });\n    }\n    \n    setShowExchangeModal(false);\n    setIsTrumpExchange(false);\n  };\n\n  const handleExchangeTrump = (cardIndex: number) => {\n    if (!socket) return;\n    socket.emit('exchange_trump', { gameId: gameState.id, cardIndex });\n  };\n\n  const handleOpenTrumpExchange = () => {\n    setIsTrumpExchange(true);\n    setSelectedCardsForExchange([]);\n    setShowExchangeModal(true);\n  };\n\n  const handleSkipTrumpExchange = () => {\n    if (!socket) return;\n    socket.emit('exchange_trump', { gameId: gameState.id, cardIndex: -1 });\n  };\n\n  const handleSendChat = () => {\n    if (!socket || !chatMessage.trim()) return;\n    socket.emit('send_chat', { gameId: gameState.id, message: chatMessage.trim() });\n    setChatMessage('');\n  };\n\n  const handleKeyPress = (e: React.KeyboardEvent) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendChat();\n    }\n  };\n\n  const isMyTurn = gameState.players[gameState.currentPlayerIndex]?.id === updatedCurrentPlayer.id;\n  const canMakeDecision = gameState.gamePhase === 'dealing' && updatedCurrentPlayer.enteredRound === undefined && isMyTurn;\n  const canExchange = gameState.gamePhase === 'exchanging' && updatedCurrentPlayer.enteredRound === true && !updatedCurrentPlayer.hasExchanged && isMyTurn;\n  const canExchangeTrump = gameState.gamePhase === 'trump_exchanging' && updatedCurrentPlayer.enteredRound === true && updatedCurrentPlayer.isDealer && !updatedCurrentPlayer.hasExchanged && gameState.players[gameState.currentPlayerIndex]?.id === updatedCurrentPlayer.id;\n\n  // Calculate player positions around the table\n  const getPlayerPosition = (index: number, totalPlayers: number, actualPlayerIndex: number) => {\n    // Calculate relative position (how many positions away from current player)\n    let relativeIndex = index - actualPlayerIndex;\n    if (relativeIndex < 0) {\n      relativeIndex += totalPlayers;\n    }\n    \n    // Position current player at bottom (270 degrees), others relative to that\n    const angle = (relativeIndex * 360) / totalPlayers + 90; // Start from bottom\n    \n    // Adjust radius based on number of players to prevent overlapping\n    const baseRadius = 250;\n    const radius = totalPlayers <= 3 ? baseRadius : baseRadius + (totalPlayers - 3) * 30;\n    \n    const x = Math.cos((angle * Math.PI) / 180) * radius;\n    const y = Math.sin((angle * Math.PI) / 180) * radius;\n    \n    return { x, y };\n  };\n\n  return (\n    <div className=\"game-room-new\">\n      {/* Header */}\n      <div className=\"game-header-new\">\n        <div className=\"room-info\">\n          <span className=\"phase-badge-new\">{gameState.gamePhase.replace('_', ' ')}</span>\n          <span className=\"bot-info\">🤖 {gameState.players.filter(p => p.isBot).length} Bots</span>\n        </div>\n        <div className=\"room-id-center\">\n          <button \n            className=\"room-badge-clickable\"\n            onClick={() => {\n              navigator.clipboard.writeText(gameState.id);\n              // Optional: Show a brief notification\n              const button = document.querySelector('.room-badge-clickable');\n              if (button) {\n                const originalText = button.textContent;\n                button.textContent = 'Copied!';\n                button.classList.add('copied');\n                setTimeout(() => {\n                  button.textContent = originalText;\n                  button.classList.remove('copied');\n                }, 2000);\n              }\n            }}\n            title=\"Click to copy game ID\"\n          >\n            Room: {gameState.id}\n          </button>\n        </div>\n        <button onClick={onLeaveGame} className=\"leave-btn-new\">Leave Game</button>\n      </div>\n\n      {/* Game Table */}\n      <div className=\"game-table-container\">\n        <div className=\"game-table\">\n          {/* Central Table Area */}\n          <div className=\"table-center\">\n            {/* Trump Card */}\n            {gameState.trumpCard && (\n              <div className=\"trump-card-new\">\n                <div className=\"card trump-new\">\n                  <span className={`card-rank ${gameState.trumpCard.suit === 'hearts' || gameState.trumpCard.suit === 'diamonds' ? 'red' : 'black'}`}>\n                    {gameState.trumpCard.rank}\n                  </span>\n                  <span className={`card-suit ${gameState.trumpCard.suit === 'hearts' || gameState.trumpCard.suit === 'diamonds' ? 'red' : 'black'}`}>\n                    {getSuitSymbol(gameState.trumpCard.suit)}\n                  </span>\n                </div>\n                <div className=\"trump-label\">Trump</div>\n              </div>\n            )}\n\n            {/* Tree Cards */}\n            <div className=\"tree-cards\">\n              <div className=\"tree-card-back\"></div>\n              <div className=\"tree-count\">{gameState.tree.length}</div>\n            </div>\n\n            {/* Current House */}\n            {gameState.currentHouse.length > 0 && (\n              <div className=\"current-house-new\">\n                <div className=\"house-cards-new\">\n                  {gameState.currentHouse.map((houseCard, index) => (\n                    <div key={`${houseCard.playerId}-${houseCard.card.suit}-${houseCard.card.rank}-${index}`} className=\"house-card-new\">\n                      <div className=\"card house-card\">\n                        <span className={`card-rank ${houseCard.card.suit === 'hearts' || houseCard.card.suit === 'diamonds' ? 'red' : 'black'}`}>\n                          {houseCard.card.rank}\n                        </span>\n                        <span className={`card-suit ${houseCard.card.suit === 'hearts' || houseCard.card.suit === 'diamonds' ? 'red' : 'black'}`}>\n                          {getSuitSymbol(houseCard.card.suit)}\n                        </span>\n                      </div>\n                      <div className=\"card-player-name\">{houseCard.playerName}</div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            )}\n\n            {/* Game Status Message */}\n            {gameState.gamePhase === 'dealing' && (\n              <div className=\"game-status\">\n                {gameState.players[gameState.currentPlayerIndex]?.isBot ? '🤖 ' : ''}\n                {gameState.players[gameState.currentPlayerIndex]?.name} is deciding to enter...\n                {gameState.players[gameState.currentPlayerIndex]?.isBot && ' (thinking...)'}\n              </div>\n            )}\n            {gameState.gamePhase === 'exchanging' && (\n              <div className=\"game-status\">\n                {gameState.players[gameState.currentPlayerIndex]?.isBot ? '🤖 ' : ''}\n                {gameState.players[gameState.currentPlayerIndex]?.name} is exchanging cards...\n                {gameState.players[gameState.currentPlayerIndex]?.isBot && ' (thinking...)'}\n              </div>\n            )}\n            {gameState.gamePhase === 'trump_exchanging' && (\n              <div className=\"game-status\">\n                {gameState.players[gameState.currentPlayerIndex]?.isBot ? '🤖 ' : ''}\n                {gameState.players[gameState.currentPlayerIndex]?.name} is exchanging trump card...\n                {gameState.players[gameState.currentPlayerIndex]?.isBot && ' (thinking...)'}\n              </div>\n            )}\n            \n            {/* Bot Action Notification */}\n            {botActionMessage && (\n              <div className=\"bot-action-notification\">\n                {botActionMessage}\n              </div>\n            )}\n          </div>\n\n          {/* Players Around the Table */}\n          {gameState.players.map((player, index) => {\n            const position = getPlayerPosition(index, gameState.players.length, actualPlayerIndex);\n            const isCurrentPlayer = player.id === updatedCurrentPlayer.id;\n            const isActiveTurn = gameState.currentPlayerIndex === index;\n            \n            return (\n              <div\n                key={player.id}\n                className={`player-position ${isCurrentPlayer ? 'current-player' : ''} ${isActiveTurn ? 'active-turn' : ''}`}\n                style={{\n                  '--x': `${position.x}px`,\n                  '--y': `${position.y}px`\n                } as React.CSSProperties}\n              >\n                <div className=\"player-avatar\">\n                  {player.isHost && <span className=\"crown\">👑</span>}\n                  {player.isDealer && <span className=\"dealer-icon\">🎯</span>}\n                  {player.isMouth && <span className=\"mouth-icon\">👄</span>}\n                  {player.isBot && <span className=\"bot-icon\">🤖</span>}\n                  <div className=\"avatar-icon\">\n                    {player.name.charAt(0).toUpperCase()}\n                  </div>\n                </div>\n                \n                <div className=\"player-info-new\">\n                  <div className=\"player-name-new\">{player.name}</div>\n                  <div className=\"player-score-new\">{player.score}/-</div>\n                  <div className=\"player-houses-new\">Houses: {player.housesBuilt}</div>\n                </div>\n\n                                  {/* Player Hand */}\n                <div className=\"player-hand-new\">\n                  {isCurrentPlayer ? (\n                    // Show actual cards for current player\n                    <div className=\"hand-cards\">\n                      {Array.isArray(player.hand) ? player.hand.map((card, cardIndex) => (\n                        <button \n                          key={`${card.suit}-${card.rank}-${cardIndex}`}\n                          className={`card hand-card ${playableCards.includes(cardIndex) ? 'playable' : ''} ${\n                            isMyTurn ? 'my-turn' : ''\n                          } ${selectedCardsForExchange.includes(cardIndex) ? 'selected-for-exchange' : ''}`}\n                          onClick={() => {\n                            if (canExchange) {\n                              handleCardSelectForExchange(cardIndex);\n                            } else if (isMyTurn && playableCards.includes(cardIndex)) {\n                              handlePlayCard(cardIndex);\n                            }\n                          }}\n                          disabled={!isMyTurn || (!canExchange && !playableCards.includes(cardIndex))}\n                          aria-label={`Play ${card.rank} of ${card.suit}`}\n                        >\n                          <span className={`card-rank ${card.suit === 'hearts' || card.suit === 'diamonds' ? 'red' : 'black'}`}>\n                            {card.rank}\n                          </span>\n                          <span className={`card-suit ${card.suit === 'hearts' || card.suit === 'diamonds' ? 'red' : 'black'}`}>\n                            {getSuitSymbol(card.suit)}\n                          </span>\n                        </button>\n                      )) : (\n                        <div className=\"card-count\">{player.hand} cards</div>\n                      )}\n                    </div>\n                  ) : (\n                    // Show card backs for other players\n                    <div className=\"opponent-cards\">\n                      {Array.isArray(player.hand) ? player.hand.map((_, cardIndex) => (\n                        <div key={`${player.id}-card-back-${cardIndex}`} className=\"card card-back\"></div>\n                      )) : (\n                        <div className=\"card-count\">{player.hand} cards</div>\n                      )}\n                    </div>\n                  )}\n                </div>\n\n                {/* Player Status */}\n                <div className=\"player-status-new\">\n                  {player.isReady && <span className=\"ready-badge-new\">Ready</span>}\n                  {player.enteredRound === true && <span className=\"entered-badge-new\">Entered</span>}\n                  {player.enteredRound === false && <span className=\"declined-badge-new\">Declined</span>}\n                  {player.hasExchanged && <span className=\"exchanged-badge-new\">Exchanged</span>}\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n\n      {/* Game Controls */}\n      <div className=\"game-controls-new\">\n        \n        {gameState.gamePhase === 'waiting' && !updatedCurrentPlayer.isReady && (\n          <button onClick={handleReady} className=\"ready-btn-new\">Ready</button>\n        )}\n\n        {(gameState.gamePhase === 'waiting' ) && updatedCurrentPlayer.isReady && (\n          <button onClick={handleUnready} className=\"unready-btn-new\">Unready</button>\n        )}\n        \n        {updatedCurrentPlayer.isHost && gameState.gamePhase === 'ready' && (\n          <button onClick={handleStartGame} className=\"start-btn-new\">Start Game</button>\n        )}\n        \n        {canMakeDecision && (\n          <div className=\"decision-buttons-new\">\n            <button onClick={handleEnterTurn} className=\"enter-btn-new\">Enter</button>\n            <button onClick={handleSkipTurn} className=\"skip-btn-new\">Skip</button>\n          </div>\n        )}\n\n        {canExchange && (\n          <div className=\"exchange-controls\">\n            <button \n              onClick={handleExchangeCards} \n              disabled={selectedCardsForExchange.length === 0}\n              className=\"exchange-btn\"\n            >\n              Exchange {selectedCardsForExchange.length} Cards\n            </button>\n            <button onClick={handleSkipExchange} className=\"skip-exchange-btn\">\n              Skip Exchange\n            </button>\n          </div>\n        )}\n\n        {canExchangeTrump && (\n          <div className=\"exchange-controls\">\n            <button \n              onClick={handleOpenTrumpExchange}\n              className=\"exchange-btn\"\n            >\n              Exchange Trump Card\n            </button>\n            <button onClick={handleSkipTrumpExchange} className=\"skip-exchange-btn\">\n              Skip Trump Exchange\n            </button>\n          </div>\n        )}\n      </div>\n\n      {/* Exchange Modal */}\n      {showExchangeModal && (\n        <div className=\"exchange-modal-overlay\">\n          <div className=\"exchange-modal\">\n            <h3>{isTrumpExchange ? 'Exchange Trump Card' : 'Exchange Cards'}</h3>\n            {isTrumpExchange && gameState.trumpCard && (\n              <div className=\"trump-card-display\">\n                <div className=\"card trump-new\">\n                  <span className={`card-rank ${gameState.trumpCard.suit === 'hearts' || gameState.trumpCard.suit === 'diamonds' ? 'red' : 'black'}`}>\n                    {gameState.trumpCard.rank}\n                  </span>\n                  <span className={`card-suit ${gameState.trumpCard.suit === 'hearts' || gameState.trumpCard.suit === 'diamonds' ? 'red' : 'black'}`}>\n                    {getSuitSymbol(gameState.trumpCard.suit)}\n                  </span>\n                </div>\n                <div className=\"trump-label\">Trump Card</div>\n              </div>\n            )}\n            <p>\n              {isTrumpExchange \n                ? `Select one card to exchange with the trump card (${gameState.trumpCard?.rank} of ${gameState.trumpCard?.suit})`\n                : `Select cards to exchange with the tree. You can exchange up to ${gameState.tree.length} cards.`\n              }\n            </p>\n            <div className=\"exchange-cards-preview\">\n              {Array.isArray(updatedCurrentPlayer.hand) && updatedCurrentPlayer.hand.map((card, index) => (\n                <button\n                  key={`${card.suit}-${card.rank}-${index}`}\n                  className={`card exchange-card ${selectedCardsForExchange.includes(index) ? 'selected' : ''}`}\n                  onClick={() => handleCardSelectForExchange(index)}\n                >\n                  <span className={`card-rank ${card.suit === 'hearts' || card.suit === 'diamonds' ? 'red' : 'black'}`}>\n                    {card.rank}\n                  </span>\n                  <span className={`card-suit ${card.suit === 'hearts' || card.suit === 'diamonds' ? 'red' : 'black'}`}>\n                    {getSuitSymbol(card.suit)}\n                  </span>\n                </button>\n              ))}\n            </div>\n            <div className=\"exchange-modal-buttons\">\n              <button \n                onClick={handleExchangeCards}\n                disabled={selectedCardsForExchange.length === 0}\n                className=\"confirm-exchange-btn\"\n              >\n                {isTrumpExchange \n                  ? `Exchange ${selectedCardsForExchange.length} Card`\n                  : `Exchange ${selectedCardsForExchange.length} Cards`\n                }\n              </button>\n              <button onClick={handleSkipExchange} className=\"skip-exchange-btn\">\n                {isTrumpExchange ? 'Skip Trump Exchange' : 'Skip Exchange'}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Chat Toggle */}\n      <button \n        onClick={() => setShowChat(!showChat)} \n        className=\"chat-toggle-btn\"\n      >\n        💬\n      </button>\n\n      {/* Chat Panel */}\n      {showChat && (\n        <div className=\"chat-panel\">\n          <div className=\"chat-header\">\n            <h3>Chat</h3>\n            <button onClick={() => setShowChat(false)} className=\"close-chat\">×</button>\n          </div>\n          <div className=\"chat-messages-new\">\n            {gameState.chatMessages.map((message: ChatMessage) => (\n              <div key={message.id} className={`chat-message-new ${message.type}`}>\n                <span className=\"message-sender\">{message.playerName}:</span>\n                <span className=\"message-text\">{message.message}</span>\n              </div>\n            ))}\n          </div>\n          <div className=\"chat-input-new\">\n            <input\n              type=\"text\"\n              placeholder=\"Type a message...\"\n              value={chatMessage}\n              onChange={(e) => setChatMessage(e.target.value)}\n              onKeyDown={handleKeyPress}\n              className=\"message-input-new\"\n            />\n            <button onClick={handleSendChat} className=\"send-btn-new\">Send</button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default GameRoom;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}