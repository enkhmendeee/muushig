{"ast":null,"code":"var _jsxFileName = \"/Users/enkhmendeee/muushig/client/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { io } from 'socket.io-client';\nimport './App.css';\nimport HomePage from './pages/HomePage';\nimport GameRoom from './pages/GameRoom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Main App Component\nfunction App() {\n  _s();\n  const [socket, setSocket] = useState(null);\n  const [gameState, setGameState] = useState(null);\n  const [currentPlayer, setCurrentPlayer] = useState(null);\n  const [isConnected, setIsConnected] = useState(false);\n  useEffect(() => {\n    const newSocket = io('http://localhost:3000');\n    setSocket(newSocket);\n    newSocket.on('connect', () => {\n      setIsConnected(true);\n    });\n    newSocket.on('disconnect', () => {\n      setIsConnected(false);\n    });\n    newSocket.on('game_created', data => {\n      setCurrentPlayer(data.player);\n    });\n    newSocket.on('game_joined', data => {\n      setCurrentPlayer(data.player);\n    });\n    newSocket.on('game_state', state => {\n      setGameState(state);\n    });\n    newSocket.on('chat_message', message => {\n      // Update game state with new chat message\n      setGameState(prevState => {\n        if (!prevState) return prevState;\n        return {\n          ...prevState,\n          chatMessages: [...prevState.chatMessages, message]\n        };\n      });\n    });\n    return () => {\n      newSocket.close();\n    };\n  }, []);\n  const handleLeaveGame = () => {\n    if (socket && gameState) {\n      socket.emit('leave_game', {\n        gameId: gameState.id\n      });\n    }\n    setGameState(null);\n    setCurrentPlayer(null);\n  };\n  if (!isConnected) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Connecting to server...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this);\n  }\n  if (gameState && currentPlayer) {\n    return /*#__PURE__*/_jsxDEV(GameRoom, {\n      socket: socket,\n      gameState: gameState,\n      currentPlayer: currentPlayer,\n      onLeaveGame: handleLeaveGame\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(HomePage, {\n    socket: socket\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"tH0fAJuUOrVL5ULFBsLkgla1iYI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","io","HomePage","GameRoom","jsxDEV","_jsxDEV","App","_s","socket","setSocket","gameState","setGameState","currentPlayer","setCurrentPlayer","isConnected","setIsConnected","newSocket","on","data","player","state","message","prevState","chatMessages","close","handleLeaveGame","emit","gameId","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onLeaveGame","_c","$RefreshReg$"],"sources":["/Users/enkhmendeee/muushig/client/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { io, Socket } from 'socket.io-client';\nimport './App.css';\nimport HomePage from './pages/HomePage';\nimport GameRoom from './pages/GameRoom';\nimport { Player, GameState, ChatMessage } from './types/game';\n\n// Main App Component\nfunction App() {\n  const [socket, setSocket] = useState<Socket | null>(null);\n  const [gameState, setGameState] = useState<GameState | null>(null);\n  const [currentPlayer, setCurrentPlayer] = useState<Player | null>(null);\n  const [isConnected, setIsConnected] = useState(false);\n\n  useEffect(() => {\n    const newSocket = io('http://localhost:3000');\n    setSocket(newSocket);\n\n    newSocket.on('connect', () => {\n      setIsConnected(true);\n    });\n\n    newSocket.on('disconnect', () => {\n      setIsConnected(false);\n    });\n\n    newSocket.on('game_created', (data: { gameId: string; player: Player }) => {\n      setCurrentPlayer(data.player);\n    });\n\n    newSocket.on('game_joined', (data: { gameId: string; player: Player }) => {\n      setCurrentPlayer(data.player);\n    });\n\n    newSocket.on('game_state', (state: GameState) => {\n      setGameState(state);\n    });\n\n    newSocket.on('chat_message', (message: ChatMessage) => {\n      // Update game state with new chat message\n      setGameState(prevState => {\n        if (!prevState) return prevState;\n        return {\n          ...prevState,\n          chatMessages: [...prevState.chatMessages, message]\n        };\n      });\n    });\n\n\n\n    return () => {\n      newSocket.close();\n    };\n  }, []);\n\n  const handleLeaveGame = () => {\n    if (socket && gameState) {\n      socket.emit('leave_game', { gameId: gameState.id });\n    }\n    setGameState(null);\n    setCurrentPlayer(null);\n  };\n\n  if (!isConnected) {\n    return (\n      <div className=\"loading\">\n        <div className=\"spinner\"></div>\n        <p>Connecting to server...</p>\n      </div>\n    );\n  }\n\n  if (gameState && currentPlayer) {\n    return (\n      <GameRoom\n        socket={socket}\n        gameState={gameState}\n        currentPlayer={currentPlayer}\n        onLeaveGame={handleLeaveGame}\n      />\n    );\n  }\n\n  return (\n    <HomePage\n      socket={socket}\n    />\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,EAAE,QAAgB,kBAAkB;AAC7C,OAAO,WAAW;AAClB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,QAAQ,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGxC;AACA,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAgB,IAAI,CAAC;EACzD,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAmB,IAAI,CAAC;EAClE,MAAM,CAACa,aAAa,EAAEC,gBAAgB,CAAC,GAAGd,QAAQ,CAAgB,IAAI,CAAC;EACvE,MAAM,CAACe,WAAW,EAAEC,cAAc,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAErDC,SAAS,CAAC,MAAM;IACd,MAAMgB,SAAS,GAAGf,EAAE,CAAC,uBAAuB,CAAC;IAC7CQ,SAAS,CAACO,SAAS,CAAC;IAEpBA,SAAS,CAACC,EAAE,CAAC,SAAS,EAAE,MAAM;MAC5BF,cAAc,CAAC,IAAI,CAAC;IACtB,CAAC,CAAC;IAEFC,SAAS,CAACC,EAAE,CAAC,YAAY,EAAE,MAAM;MAC/BF,cAAc,CAAC,KAAK,CAAC;IACvB,CAAC,CAAC;IAEFC,SAAS,CAACC,EAAE,CAAC,cAAc,EAAGC,IAAwC,IAAK;MACzEL,gBAAgB,CAACK,IAAI,CAACC,MAAM,CAAC;IAC/B,CAAC,CAAC;IAEFH,SAAS,CAACC,EAAE,CAAC,aAAa,EAAGC,IAAwC,IAAK;MACxEL,gBAAgB,CAACK,IAAI,CAACC,MAAM,CAAC;IAC/B,CAAC,CAAC;IAEFH,SAAS,CAACC,EAAE,CAAC,YAAY,EAAGG,KAAgB,IAAK;MAC/CT,YAAY,CAACS,KAAK,CAAC;IACrB,CAAC,CAAC;IAEFJ,SAAS,CAACC,EAAE,CAAC,cAAc,EAAGI,OAAoB,IAAK;MACrD;MACAV,YAAY,CAACW,SAAS,IAAI;QACxB,IAAI,CAACA,SAAS,EAAE,OAAOA,SAAS;QAChC,OAAO;UACL,GAAGA,SAAS;UACZC,YAAY,EAAE,CAAC,GAAGD,SAAS,CAACC,YAAY,EAAEF,OAAO;QACnD,CAAC;MACH,CAAC,CAAC;IACJ,CAAC,CAAC;IAIF,OAAO,MAAM;MACXL,SAAS,CAACQ,KAAK,CAAC,CAAC;IACnB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,eAAe,GAAGA,CAAA,KAAM;IAC5B,IAAIjB,MAAM,IAAIE,SAAS,EAAE;MACvBF,MAAM,CAACkB,IAAI,CAAC,YAAY,EAAE;QAAEC,MAAM,EAAEjB,SAAS,CAACkB;MAAG,CAAC,CAAC;IACrD;IACAjB,YAAY,CAAC,IAAI,CAAC;IAClBE,gBAAgB,CAAC,IAAI,CAAC;EACxB,CAAC;EAED,IAAI,CAACC,WAAW,EAAE;IAChB,oBACET,OAAA;MAAKwB,SAAS,EAAC,SAAS;MAAAC,QAAA,gBACtBzB,OAAA;QAAKwB,SAAS,EAAC;MAAS;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAC/B7B,OAAA;QAAAyB,QAAA,EAAG;MAAuB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3B,CAAC;EAEV;EAEA,IAAIxB,SAAS,IAAIE,aAAa,EAAE;IAC9B,oBACEP,OAAA,CAACF,QAAQ;MACPK,MAAM,EAAEA,MAAO;MACfE,SAAS,EAAEA,SAAU;MACrBE,aAAa,EAAEA,aAAc;MAC7BuB,WAAW,EAAEV;IAAgB;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CAAC;EAEN;EAEA,oBACE7B,OAAA,CAACH,QAAQ;IACPM,MAAM,EAAEA;EAAO;IAAAuB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChB,CAAC;AAEN;AAAC3B,EAAA,CAjFQD,GAAG;AAAA8B,EAAA,GAAH9B,GAAG;AAmFZ,eAAeA,GAAG;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}