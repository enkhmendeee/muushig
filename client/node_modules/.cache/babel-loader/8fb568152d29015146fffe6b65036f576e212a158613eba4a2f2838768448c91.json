{"ast":null,"code":"import React from'react';import{getSuitSymbol}from'../../utils/gameUtils';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const PlayerHand=_ref=>{let{player,isCurrentPlayer,canPlayCard,playableCards,selectedCardsForExchange,cardOrder,draggedCardIndex,onDragStart,onDragOver,onDrop,onDragEnd,onCardSelectForExchange,onPlayCard}=_ref;if(!isCurrentPlayer){// Show card backs for other players\nreturn/*#__PURE__*/_jsx(\"div\",{className:\"player-hand-new\",children:/*#__PURE__*/_jsx(\"div\",{className:\"opponent-cards\",children:Array.isArray(player.hand)?player.hand.map((_,cardIndex)=>/*#__PURE__*/_jsx(\"div\",{className:\"card card-back\"},\"\".concat(player.id,\"-card-back-\").concat(cardIndex))):/*#__PURE__*/_jsxs(\"div\",{className:\"card-count\",children:[player.hand,\" cards\"]})})});}// Show actual cards for current player\nreturn/*#__PURE__*/_jsx(\"div\",{className:\"player-hand-new\",children:/*#__PURE__*/_jsx(\"div\",{className:\"hand-cards\",children:Array.isArray(player.hand)?cardOrder.map((originalIndex,displayIndex)=>{const card=player.hand[originalIndex];// Skip rendering if card doesn't exist (was played)\nif(!card)return null;return/*#__PURE__*/_jsxs(\"button\",{className:\"card hand-card \".concat(playableCards.includes(originalIndex)?'playable':'',\" \").concat(canPlayCard?'my-turn':'',\" \").concat(selectedCardsForExchange.includes(originalIndex)?'selected-for-exchange':'',\" \").concat(draggedCardIndex===displayIndex?'dragging':''),draggable:canPlayCard?playableCards.includes(originalIndex):true,onDragStart:e=>onDragStart(e,displayIndex),onDragOver:onDragOver,onDrop:e=>onDrop(e,displayIndex),onDragEnd:onDragEnd,onClick:()=>{if(canPlayCard&&playableCards.includes(originalIndex)){onPlayCard(originalIndex);}else{onCardSelectForExchange(originalIndex);}},disabled:canPlayCard&&!playableCards.includes(originalIndex),\"aria-label\":\"Play \".concat(card.rank,\" of \").concat(card.suit),children:[/*#__PURE__*/_jsx(\"span\",{className:\"card-rank \".concat(card.suit==='hearts'||card.suit==='diamonds'?'red':'black'),children:card.rank}),/*#__PURE__*/_jsx(\"span\",{className:\"card-suit \".concat(card.suit==='hearts'||card.suit==='diamonds'?'red':'black'),children:getSuitSymbol(card.suit)})]},\"\".concat(card.suit,\"-\").concat(card.rank,\"-\").concat(originalIndex,\"-\").concat(displayIndex));}):/*#__PURE__*/_jsxs(\"div\",{className:\"card-count\",children:[player.hand,\" cards\"]})})});};export default PlayerHand;","map":{"version":3,"names":["React","getSuitSymbol","jsx","_jsx","jsxs","_jsxs","PlayerHand","_ref","player","isCurrentPlayer","canPlayCard","playableCards","selectedCardsForExchange","cardOrder","draggedCardIndex","onDragStart","onDragOver","onDrop","onDragEnd","onCardSelectForExchange","onPlayCard","className","children","Array","isArray","hand","map","_","cardIndex","concat","id","originalIndex","displayIndex","card","includes","draggable","e","onClick","disabled","rank","suit"],"sources":["/Users/enkhmendeee/muushig/client/src/components/game/PlayerHand.tsx"],"sourcesContent":["import React from 'react';\nimport { Player, Card } from '../../types/game';\nimport { getSuitSymbol } from '../../utils/gameUtils';\n\ninterface PlayerHandProps {\n  player: Player;\n  isCurrentPlayer: boolean;\n  canPlayCard: boolean;\n  playableCards: number[];\n  selectedCardsForExchange: number[];\n  cardOrder: number[];\n  draggedCardIndex: number | null;\n  onDragStart: (e: React.DragEvent, cardIndex: number) => void;\n  onDragOver: (e: React.DragEvent) => void;\n  onDrop: (e: React.DragEvent, dropIndex: number) => void;\n  onDragEnd: () => void;\n  onCardSelectForExchange: (cardIndex: number) => void;\n  onPlayCard: (cardIndex: number) => void;\n}\n\nconst PlayerHand: React.FC<PlayerHandProps> = ({\n  player,\n  isCurrentPlayer,\n  canPlayCard,\n  playableCards,\n  selectedCardsForExchange,\n  cardOrder,\n  draggedCardIndex,\n  onDragStart,\n  onDragOver,\n  onDrop,\n  onDragEnd,\n  onCardSelectForExchange,\n  onPlayCard\n}) => {\n  if (!isCurrentPlayer) {\n    // Show card backs for other players\n    return (\n      <div className=\"player-hand-new\">\n        <div className=\"opponent-cards\">\n          {Array.isArray(player.hand) ? player.hand.map((_, cardIndex) => (\n            <div key={`${player.id}-card-back-${cardIndex}`} className=\"card card-back\"></div>\n          )) : (\n            <div className=\"card-count\">{player.hand} cards</div>\n          )}\n        </div>\n      </div>\n    );\n  }\n\n  // Show actual cards for current player\n  return (\n    <div className=\"player-hand-new\">\n      <div className=\"hand-cards\">\n        {Array.isArray(player.hand) ? cardOrder.map((originalIndex, displayIndex) => {\n          const card = (player.hand as Card[])[originalIndex];\n          // Skip rendering if card doesn't exist (was played)\n          if (!card) return null;\n          return (\n            <button \n              key={`${card.suit}-${card.rank}-${originalIndex}-${displayIndex}`}\n              className={`card hand-card ${playableCards.includes(originalIndex) ? 'playable' : ''} ${\n                canPlayCard ? 'my-turn' : ''\n              } ${selectedCardsForExchange.includes(originalIndex) ? 'selected-for-exchange' : ''} ${\n                draggedCardIndex === displayIndex ? 'dragging' : ''\n              }`}\n              draggable={canPlayCard ? playableCards.includes(originalIndex) : true}\n              onDragStart={(e) => onDragStart(e, displayIndex)}\n              onDragOver={onDragOver}\n              onDrop={(e) => onDrop(e, displayIndex)}\n              onDragEnd={onDragEnd}\n              onClick={() => {\n                if (canPlayCard && playableCards.includes(originalIndex)) {\n                  onPlayCard(originalIndex);\n                } else {\n                  onCardSelectForExchange(originalIndex);\n                }\n              }}\n              disabled={canPlayCard && !playableCards.includes(originalIndex)}\n              aria-label={`Play ${card.rank} of ${card.suit}`}\n            >\n              <span className={`card-rank ${card.suit === 'hearts' || card.suit === 'diamonds' ? 'red' : 'black'}`}>\n                {card.rank}\n              </span>\n              <span className={`card-suit ${card.suit === 'hearts' || card.suit === 'diamonds' ? 'red' : 'black'}`}>\n                {getSuitSymbol(card.suit)}\n              </span>\n            </button>\n          );\n        }) : (\n          <div className=\"card-count\">{player.hand} cards</div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default PlayerHand;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}