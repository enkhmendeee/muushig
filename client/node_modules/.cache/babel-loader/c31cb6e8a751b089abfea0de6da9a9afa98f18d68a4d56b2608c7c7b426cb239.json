{"ast":null,"code":"var _jsxFileName = \"/Users/enkhmendeee/muushig/client/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { io } from 'socket.io-client';\nimport './App.css';\nimport HomePage from './pages/HomePage';\nimport GameRoom from './pages/GameRoom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Main App Component\nfunction App() {\n  _s();\n  const [socket, setSocket] = useState(null);\n  const [gameState, setGameState] = useState(null);\n  const [currentPlayer, setCurrentPlayer] = useState(null);\n  const [isConnected, setIsConnected] = useState(false);\n  useEffect(() => {\n    const newSocket = io('http://localhost:3000');\n    setSocket(newSocket);\n    newSocket.on('connect', () => {\n      setIsConnected(true);\n      console.log('Connected to server');\n    });\n    newSocket.on('disconnect', () => {\n      setIsConnected(false);\n      console.log('Disconnected from server');\n    });\n    newSocket.on('game_created', data => {\n      setCurrentPlayer(data.player);\n      console.log('Game created:', data.gameId);\n    });\n    newSocket.on('game_joined', data => {\n      setCurrentPlayer(data.player);\n      console.log('Joined game:', data.gameId);\n    });\n    newSocket.on('game_state', state => {\n      setGameState(state);\n      console.log('Game state received:', state);\n    });\n    newSocket.on('chat_message', message => {\n      console.log('Chat message received:', message);\n      // Update game state with new chat message\n      setGameState(prevState => {\n        if (!prevState) return prevState;\n        return {\n          ...prevState,\n          chatMessages: [...prevState.chatMessages, message]\n        };\n      });\n    });\n    newSocket.on('dealt_cards', data => {\n      console.log('Cards dealt, trump card:', data.trumpCard);\n    });\n    newSocket.on('house_completed', data => {\n      console.log('House completed by:', data.winner.name);\n    });\n    newSocket.on('game_ended', data => {\n      console.log('Game ended, winner:', data.winner.name);\n    });\n    return () => {\n      newSocket.close();\n    };\n  }, []);\n  const handleLeaveGame = () => {\n    if (socket && gameState) {\n      socket.emit('leave_game', {\n        gameId: gameState.id\n      });\n    }\n    setGameState(null);\n    setCurrentPlayer(null);\n  };\n  if (!isConnected) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Connecting to server...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this);\n  }\n  if (gameState && currentPlayer) {\n    return /*#__PURE__*/_jsxDEV(GameRoom, {\n      socket: socket,\n      gameState: gameState,\n      currentPlayer: currentPlayer,\n      onLeaveGame: handleLeaveGame\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(HomePage, {\n    socket: socket\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"tH0fAJuUOrVL5ULFBsLkgla1iYI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","io","HomePage","GameRoom","jsxDEV","_jsxDEV","App","_s","socket","setSocket","gameState","setGameState","currentPlayer","setCurrentPlayer","isConnected","setIsConnected","newSocket","on","console","log","data","player","gameId","state","message","prevState","chatMessages","trumpCard","winner","name","close","handleLeaveGame","emit","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onLeaveGame","_c","$RefreshReg$"],"sources":["/Users/enkhmendeee/muushig/client/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { io, Socket } from 'socket.io-client';\nimport './App.css';\nimport HomePage from './pages/HomePage';\nimport GameRoom from './pages/GameRoom';\nimport { Player, Card, GameState, ChatMessage } from './types/game';\n\n// Main App Component\nfunction App() {\n  const [socket, setSocket] = useState<Socket | null>(null);\n  const [gameState, setGameState] = useState<GameState | null>(null);\n  const [currentPlayer, setCurrentPlayer] = useState<Player | null>(null);\n  const [isConnected, setIsConnected] = useState(false);\n\n  useEffect(() => {\n    const newSocket = io('http://localhost:3000');\n    setSocket(newSocket);\n\n    newSocket.on('connect', () => {\n      setIsConnected(true);\n      console.log('Connected to server');\n    });\n\n    newSocket.on('disconnect', () => {\n      setIsConnected(false);\n      console.log('Disconnected from server');\n    });\n\n    newSocket.on('game_created', (data: { gameId: string; player: Player }) => {\n      setCurrentPlayer(data.player);\n      console.log('Game created:', data.gameId);\n    });\n\n    newSocket.on('game_joined', (data: { gameId: string; player: Player }) => {\n      setCurrentPlayer(data.player);\n      console.log('Joined game:', data.gameId);\n    });\n\n    newSocket.on('game_state', (state: GameState) => {\n      setGameState(state);\n      console.log('Game state received:', state);\n    });\n\n    newSocket.on('chat_message', (message: ChatMessage) => {\n      console.log('Chat message received:', message);\n      // Update game state with new chat message\n      setGameState(prevState => {\n        if (!prevState) return prevState;\n        return {\n          ...prevState,\n          chatMessages: [...prevState.chatMessages, message]\n        };\n      });\n    });\n\n    newSocket.on('dealt_cards', (data: { gameId: string; trumpCard: Card }) => {\n      console.log('Cards dealt, trump card:', data.trumpCard);\n    });\n\n    newSocket.on('house_completed', (data: { house: any; winner: Player }) => {\n      console.log('House completed by:', data.winner.name);\n    });\n\n    newSocket.on('game_ended', (data: { winner: Player }) => {\n      console.log('Game ended, winner:', data.winner.name);\n    });\n\n    return () => {\n      newSocket.close();\n    };\n  }, []);\n\n  const handleLeaveGame = () => {\n    if (socket && gameState) {\n      socket.emit('leave_game', { gameId: gameState.id });\n    }\n    setGameState(null);\n    setCurrentPlayer(null);\n  };\n\n  if (!isConnected) {\n    return (\n      <div className=\"loading\">\n        <div className=\"spinner\"></div>\n        <p>Connecting to server...</p>\n      </div>\n    );\n  }\n\n  if (gameState && currentPlayer) {\n    return (\n      <GameRoom\n        socket={socket}\n        gameState={gameState}\n        currentPlayer={currentPlayer}\n        onLeaveGame={handleLeaveGame}\n      />\n    );\n  }\n\n  return (\n    <HomePage\n      socket={socket}\n    />\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}