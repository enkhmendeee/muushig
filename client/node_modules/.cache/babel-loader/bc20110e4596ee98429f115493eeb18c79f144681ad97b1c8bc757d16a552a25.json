{"ast":null,"code":"var _jsxFileName = \"/Users/enkhmendeee/muushig/client/src/components/game/PlayerHand.tsx\";\nimport React from 'react';\nimport { getSuitSymbol } from '../../utils/gameUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PlayerHand = ({\n  player,\n  isCurrentPlayer,\n  canPlayCard,\n  playableCards,\n  selectedCardsForExchange,\n  cardOrder,\n  draggedCardIndex,\n  onDragStart,\n  onDragOver,\n  onDrop,\n  onDragEnd,\n  onCardSelectForExchange,\n  onPlayCard\n}) => {\n  // Debug logging for playable cards\n  if (isCurrentPlayer && canPlayCard) {\n    console.log(`[DEBUG] PlayerHand: ${player.name} playable cards:`, {\n      playableCards: playableCards,\n      handLength: Array.isArray(player.hand) ? player.hand.length : 'not array',\n      canPlayCard: canPlayCard,\n      isCurrentPlayer: isCurrentPlayer\n    });\n  }\n  if (!isCurrentPlayer) {\n    // Show card backs for other players\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"player-hand-new\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"opponent-cards\",\n        children: Array.isArray(player.hand) ? player.hand.map((_, cardIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card card-back\"\n        }, `${player.id}-card-back-${cardIndex}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-count\",\n          children: [player.hand, \" cards\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Show actual cards for current player\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"player-hand-new\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hand-cards\",\n      children: Array.isArray(player.hand) ? cardOrder.map((originalIndex, displayIndex) => {\n        const card = player.hand[originalIndex];\n        // Skip rendering if card doesn't exist (was played)\n        if (!card) return null;\n        const isSelectedForExchange = selectedCardsForExchange.includes(originalIndex);\n        const isPlayable = playableCards.includes(originalIndex);\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `card hand-card ${isPlayable ? 'playable' : ''} ${canPlayCard ? 'my-turn' : ''} ${isSelectedForExchange ? 'selected-for-exchange' : ''} ${draggedCardIndex === displayIndex ? 'dragging' : ''}`,\n          draggable: canPlayCard ? isPlayable : true,\n          onDragStart: e => onDragStart(e, displayIndex),\n          onDragOver: onDragOver,\n          onDrop: e => onDrop(e, displayIndex),\n          onDragEnd: onDragEnd,\n          onClick: () => {\n            if (canPlayCard && isPlayable) {\n              onPlayCard(originalIndex);\n            } else {\n              onCardSelectForExchange(originalIndex);\n            }\n          },\n          disabled: canPlayCard && !isPlayable,\n          \"aria-label\": `Play ${card.rank} of ${card.suit}`,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: `card-rank ${card.suit === 'hearts' || card.suit === 'diamonds' ? 'red' : 'black'}`,\n            children: card.rank\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `card-suit ${card.suit === 'hearts' || card.suit === 'diamonds' ? 'red' : 'black'}`,\n            children: getSuitSymbol(card.suit)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this)]\n        }, `${card.suit}-${card.rank}-${originalIndex}-${displayIndex}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-count\",\n        children: [player.hand, \" cards\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_c = PlayerHand;\nexport default PlayerHand;\nvar _c;\n$RefreshReg$(_c, \"PlayerHand\");","map":{"version":3,"names":["React","getSuitSymbol","jsxDEV","_jsxDEV","PlayerHand","player","isCurrentPlayer","canPlayCard","playableCards","selectedCardsForExchange","cardOrder","draggedCardIndex","onDragStart","onDragOver","onDrop","onDragEnd","onCardSelectForExchange","onPlayCard","console","log","name","handLength","Array","isArray","hand","length","className","children","map","_","cardIndex","id","fileName","_jsxFileName","lineNumber","columnNumber","originalIndex","displayIndex","card","isSelectedForExchange","includes","isPlayable","draggable","e","onClick","disabled","rank","suit","_c","$RefreshReg$"],"sources":["/Users/enkhmendeee/muushig/client/src/components/game/PlayerHand.tsx"],"sourcesContent":["import React from 'react';\nimport { Player, Card } from '../../types/game';\nimport { getSuitSymbol } from '../../utils/gameUtils';\n\ninterface PlayerHandProps {\n  player: Player;\n  isCurrentPlayer: boolean;\n  canPlayCard: boolean;\n  playableCards: number[];\n  selectedCardsForExchange: number[];\n  cardOrder: number[];\n  draggedCardIndex: number | null;\n  onDragStart: (e: React.DragEvent, cardIndex: number) => void;\n  onDragOver: (e: React.DragEvent) => void;\n  onDrop: (e: React.DragEvent, dropIndex: number) => void;\n  onDragEnd: () => void;\n  onCardSelectForExchange: (cardIndex: number) => void;\n  onPlayCard: (cardIndex: number) => void;\n}\n\nconst PlayerHand: React.FC<PlayerHandProps> = ({\n  player,\n  isCurrentPlayer,\n  canPlayCard,\n  playableCards,\n  selectedCardsForExchange,\n  cardOrder,\n  draggedCardIndex,\n  onDragStart,\n  onDragOver,\n  onDrop,\n  onDragEnd,\n  onCardSelectForExchange,\n  onPlayCard\n}) => {\n  // Debug logging for playable cards\n  if (isCurrentPlayer && canPlayCard) {\n    console.log(`[DEBUG] PlayerHand: ${player.name} playable cards:`, {\n      playableCards: playableCards,\n      handLength: Array.isArray(player.hand) ? player.hand.length : 'not array',\n      canPlayCard: canPlayCard,\n      isCurrentPlayer: isCurrentPlayer\n    });\n  }\n\n  if (!isCurrentPlayer) {\n    // Show card backs for other players\n    return (\n      <div className=\"player-hand-new\">\n        <div className=\"opponent-cards\">\n          {Array.isArray(player.hand) ? player.hand.map((_, cardIndex) => (\n            <div key={`${player.id}-card-back-${cardIndex}`} className=\"card card-back\"></div>\n          )) : (\n            <div className=\"card-count\">{player.hand} cards</div>\n          )}\n        </div>\n      </div>\n    );\n  }\n\n  // Show actual cards for current player\n  return (\n    <div className=\"player-hand-new\">\n      <div className=\"hand-cards\">\n        {Array.isArray(player.hand) ? cardOrder.map((originalIndex, displayIndex) => {\n          const card = (player.hand as Card[])[originalIndex];\n          // Skip rendering if card doesn't exist (was played)\n          if (!card) return null;\n          \n          const isSelectedForExchange = selectedCardsForExchange.includes(originalIndex);\n          const isPlayable = playableCards.includes(originalIndex);\n          \n          return (\n            <button \n              key={`${card.suit}-${card.rank}-${originalIndex}-${displayIndex}`}\n              className={`card hand-card ${isPlayable ? 'playable' : ''} ${\n                canPlayCard ? 'my-turn' : ''\n              } ${isSelectedForExchange ? 'selected-for-exchange' : ''} ${\n                draggedCardIndex === displayIndex ? 'dragging' : ''\n              }`}\n              draggable={canPlayCard ? isPlayable : true}\n              onDragStart={(e) => onDragStart(e, displayIndex)}\n              onDragOver={onDragOver}\n              onDrop={(e) => onDrop(e, displayIndex)}\n              onDragEnd={onDragEnd}\n              onClick={() => {\n                if (canPlayCard && isPlayable) {\n                  onPlayCard(originalIndex);\n                } else {\n                  onCardSelectForExchange(originalIndex);\n                }\n              }}\n              disabled={canPlayCard && !isPlayable}\n              aria-label={`Play ${card.rank} of ${card.suit}`}\n            >\n              <span className={`card-rank ${card.suit === 'hearts' || card.suit === 'diamonds' ? 'red' : 'black'}`}>\n                {card.rank}\n              </span>\n              <span className={`card-suit ${card.suit === 'hearts' || card.suit === 'diamonds' ? 'red' : 'black'}`}>\n                {getSuitSymbol(card.suit)}\n              </span>\n            </button>\n          );\n        }) : (\n          <div className=\"card-count\">{player.hand} cards</div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default PlayerHand;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}